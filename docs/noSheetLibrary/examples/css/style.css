/*! tailwindcss v4.1.8 | MIT License | https://tailwindcss.com */
@layer properties;
::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
  cursor: pointer;
}
@layer highlight {
  :root {
    --highlight-color-text: var(--color-neutral-800);
    --highlight-color-text-1: var(--color-neutral-700);
    --highlight-color-text-2: var(--color-neutral-600);
    --highlight-color-err: var(--color-red-500);
    --highlight-color-warning: var(--color-yellow-400);
    --highlight-color-success: var(--color-green-500);
    --highlight-color-info: var(--color-blue-600);
    --highlight-color-primary: var(--color-blue-600);
    --highlight-color-primary-light: var(--color-blue-500);
  }
  .dark {
    --highlight-color-text: var(--color-neutral-200);
    --highlight-color-text-1: var(--color-neutral-300);
    --highlight-color-text-2: var(--color-neutral-400);
    --highlight-color-err: var(--color-red-400);
    --highlight-color-warning: var(--color-yellow-300);
    --highlight-color-success: var(--color-green-400);
    --highlight-color-info: var(--color-blue-400);
    --highlight-color-primary: var(--color-blue-400);
    --highlight-color-primary-light: var(--color-blue-300);
  }
}
pre code {
  background-color: transparent;
}
.highlight pre code {
  display: block;
}
.chroma .cl {
  color: var(--highlight-color-text);
}
.chroma .x {
  color: var(--highlight-color-text);
}
.chroma .err {
  color: var(--highlight-err);
}
.chroma .lnlinks {
  color: currentcolor;
  text-decoration-line: none;
  --tw-outline-style: none;
  outline-style: none;
}
.chroma .lntd {
  margin: calc(var(--spacing) * 0);
  border-style: var(--tw-border-style);
  border-width: 0px;
  vertical-align: top;
  padding: 0 calc(var(--highlight-spacing) * 0);
}
.chroma .lntable {
  margin: calc(var(--spacing) * 0);
  --tw-border-spacing-x: calc(var(--spacing) * 0);
  --tw-border-spacing-y: calc(var(--spacing) * 0);
  border-spacing: var(--tw-border-spacing-x) var(--tw-border-spacing-y);
  border-style: var(--tw-border-style);
  border-width: 0px;
  padding: calc(var(--spacing) * 0);
}
.chroma .hl {
  position: relative;
  background-color: var(--highlight-primary);
}
.chroma .hl::before {
  position: absolute;
  top: calc(var(--spacing) * 0);
  bottom: calc(var(--spacing) * 0);
  left: calc(var(--spacing) * 0);
  width: calc(var(--spacing) * 1);
  --tw-content: '';
  content: var(--tw-content);
  background-color: var(--highlight-primary);
}
.chroma .lnt, .chroma .ln {
  padding-inline: calc(var(--spacing) * 4);
  padding-block: calc(var(--spacing) * 0);
  white-space: pre;
  -webkit-user-select: none;
  user-select: none;
  color: var(--highlight-color-text-2);
}
.chroma .line {
  display: flex;
}
.highlight > .chroma .lntd:first-child {
  width: 32px;
}
.chroma .lntd pre.chroma {
  padding-inline: calc(var(--spacing) * 1);
}
.chroma .lntd:first-child pre.chroma {
  border-right-style: var(--tw-border-style);
  border-right-width: 0px;
  border-radius: 0;
  border-top-left-radius: var(--radius-md);
  border-bottom-left-radius: var(--radius-md);
}
.chroma .lntd:last-child pre.chroma {
  border-radius: 0;
  border-top-right-radius: var(--radius-md);
  border-bottom-right-radius: var(--radius-md);
}
.chroma .n {
  color: var(--highlight-color-text);
}
.chroma .na {
  color: var(--highlight-color-info);
}
.chroma .nb {
  color: var(--highlight-color-primary);
}
.chroma .bp {
  color: var(--highlight-color-info);
}
.chroma .nc {
  color: var(--highlight-color-primary-light);
}
.chroma .no {
  color: var(--highlight-color-info);
}
.chroma .nd {
  color: var(--highlight-color-primary);
}
.chroma .ni {
  color: var(--highlight-color-info);
}
.chroma .ne {
  color: var(--highlight-color-err);
}
.chroma .nf {
  color: var(--highlight-color-primary);
}
.chroma .fm {
  color: var(--highlight-color-primary);
}
.chroma .nl {
  color: var(--highlight-color-info);
}
.chroma .nn {
  color: var(--highlight-color-primary-light);
}
.chroma .nx {
  color: var(--highlight-color-text);
}
.chroma .py {
  color: var(--highlight-color-info);
}
.chroma .nt {
  color: var(--highlight-color-primary);
}
.chroma .nv {
  color: var(--highlight-color-info);
}
.chroma .vc {
  color: var(--highlight-color-info);
}
.chroma .vg {
  color: var(--highlight-color-info);
}
.chroma .vi {
  color: var(--highlight-color-info);
}
.chroma .vm {
  color: var(--highlight-color-info);
}
.chroma .k, .chroma .kc, .chroma .kd, .chroma .kn, .chroma .kp, .chroma .kr {
  color: var(--highlight-color-primary);
}
.chroma .kt {
  color: var(--highlight-color-primary-light);
}
.chroma .l {
  color: var(--highlight-color-text);
}
.chroma .ld {
  color: var(--highlight-color-success);
}
.chroma .s, .chroma .sa, .chroma .sb, .chroma .sc, .chroma .dl, .chroma .sd, .chroma .s2, .chroma .se, .chroma .sh, .chroma .si, .chroma .sx, .chroma .sr, .chroma .s1, .chroma .ss {
  color: var(--highlight-color-success);
}
.chroma .m, .chroma .mb, .chroma .mf, .chroma .mh, .chroma .mi, .chroma .il, .chroma .mo {
  color: var(--highlight-color-warning);
}
.chroma .o {
  color: var(--highlight-color-text);
}
.chroma .ow {
  color: var(--highlight-color-primary);
}
.chroma .p {
  color: var(--highlight-color-text);
}
.chroma .c, .chroma .ch, .chroma .cm, .chroma .c1, .chroma .cs {
  color: var(--highlight-color-text-2);
  font-style: italic;
}
.chroma .cp, .chroma .cpf {
  color: var(--highlight-color-primary);
}
.chroma .g {
  color: var(--highlight-color-text);
}
.chroma .gd {
  color: var(--highlight-color-err);
}
.chroma .ge {
  font-style: italic;
}
.chroma .gr {
  color: var(--highlight-color-err);
}
.chroma .gh {
  color: var(--highlight-color-primary);
  --tw-font-weight: var(--font-weight-semibold);
  font-weight: var(--font-weight-semibold);
}
.chroma .gi {
  color: var(--highlight-color-success);
}
.chroma .go {
  color: var(--highlight-color-text-2);
}
.chroma .gp {
  color: var(--highlight-color-text);
  --tw-font-weight: var(--font-weight-semibold);
  font-weight: var(--font-weight-semibold);
}
.chroma .gs {
  --tw-font-weight: var(--font-weight-semibold);
  font-weight: var(--font-weight-semibold);
}
.chroma .gu {
  color: var(--highlight-color-info);
  --tw-font-weight: var(--font-weight-semibold);
  font-weight: var(--font-weight-semibold);
}
.chroma .gt {
  color: var(--highlight-color-err);
}
.chroma .gl {
  color: var(--highlight-color-text-2);
}
.chroma .w {
  color: var(--highlight-color-text-1);
}
@layer theme, base, components, utilities;
@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji",
      "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono",
      "Courier New", monospace;
    --color-red-400: oklch(70.4% 0.191 22.216);
    --color-red-500: oklch(63.7% 0.237 25.331);
    --color-red-600: oklch(57.7% 0.245 27.325);
    --color-yellow-300: oklch(90.5% 0.182 98.111);
    --color-yellow-400: oklch(85.2% 0.199 91.936);
    --color-green-400: oklch(79.2% 0.209 151.711);
    --color-green-500: oklch(72.3% 0.219 149.579);
    --color-green-600: oklch(62.7% 0.194 149.214);
    --color-cyan-50: oklch(98.4% 0.019 200.873);
    --color-cyan-300: oklch(86.5% 0.127 207.078);
    --color-cyan-400: oklch(78.9% 0.154 211.53);
    --color-cyan-500: oklch(71.5% 0.143 215.221);
    --color-cyan-600: oklch(60.9% 0.126 221.723);
    --color-cyan-900: oklch(39.8% 0.07 227.392);
    --color-sky-50: oklch(97.7% 0.013 236.62);
    --color-sky-100: oklch(95.1% 0.026 236.824);
    --color-sky-200: oklch(90.1% 0.058 230.902);
    --color-sky-300: oklch(82.8% 0.111 230.318);
    --color-sky-400: oklch(74.6% 0.16 232.661);
    --color-sky-500: oklch(68.5% 0.169 237.323);
    --color-sky-600: oklch(58.8% 0.158 241.966);
    --color-sky-700: oklch(50% 0.134 242.749);
    --color-sky-800: oklch(44.3% 0.11 240.79);
    --color-sky-900: oklch(39.1% 0.09 240.876);
    --color-sky-950: oklch(29.3% 0.066 243.157);
    --color-blue-50: oklch(97% 0.014 254.604);
    --color-blue-100: oklch(93.2% 0.032 255.585);
    --color-blue-200: oklch(88.2% 0.059 254.128);
    --color-blue-300: oklch(80.9% 0.105 251.813);
    --color-blue-400: oklch(70.7% 0.165 254.624);
    --color-blue-500: oklch(62.3% 0.214 259.815);
    --color-blue-600: oklch(54.6% 0.245 262.881);
    --color-blue-700: oklch(48.8% 0.243 264.376);
    --color-blue-800: oklch(42.4% 0.199 265.638);
    --color-blue-900: oklch(37.9% 0.146 265.522);
    --color-blue-950: oklch(28.2% 0.091 267.935);
    --color-slate-50: oklch(98.4% 0.003 247.858);
    --color-slate-200: oklch(92.9% 0.013 255.508);
    --color-slate-300: oklch(86.9% 0.022 252.894);
    --color-slate-600: oklch(44.6% 0.043 257.281);
    --color-slate-700: oklch(37.2% 0.044 257.287);
    --color-slate-800: oklch(27.9% 0.041 260.031);
    --color-slate-900: oklch(20.8% 0.042 265.755);
    --color-gray-200: oklch(92.8% 0.006 264.531);
    --color-gray-300: oklch(87.2% 0.01 258.338);
    --color-gray-600: oklch(44.6% 0.03 256.802);
    --color-gray-800: oklch(27.8% 0.033 256.848);
    --color-gray-900: oklch(21% 0.034 264.665);
    --color-neutral-50: oklch(98.5% 0 0);
    --color-neutral-100: oklch(97% 0 0);
    --color-neutral-200: oklch(92.2% 0 0);
    --color-neutral-300: oklch(87% 0 0);
    --color-neutral-400: oklch(70.8% 0 0);
    --color-neutral-500: oklch(55.6% 0 0);
    --color-neutral-600: oklch(43.9% 0 0);
    --color-neutral-700: oklch(37.1% 0 0);
    --color-neutral-800: oklch(26.9% 0 0);
    --color-neutral-900: oklch(20.5% 0 0);
    --color-neutral-950: oklch(14.5% 0 0);
    --color-white: #fff;
    --spacing: 0.25rem;
    --breakpoint-lg: 64rem;
    --container-6xl: 72rem;
    --text-xs: 0.75rem;
    --text-xs--line-height: calc(1 / 0.75);
    --text-sm: 0.875rem;
    --text-sm--line-height: calc(1.25 / 0.875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-7xl: 4.5rem;
    --text-7xl--line-height: 1;
    --text-8xl: 6rem;
    --text-8xl--line-height: 1;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --tracking-tight: -0.025em;
    --leading-tight: 1.25;
    --leading-relaxed: 1.625;
    --radius-md: 0.375rem;
    --radius-lg: 0.5rem;
    --radius-xl: 0.75rem;
    --ease-out: cubic-bezier(0, 0, 0.2, 1);
    --ease-in-out: cubic-bezier(0.4, 0, 0.2, 1);
    --blur-sm: 8px;
    --blur-md: 12px;
    --default-transition-duration: 150ms;
    --default-transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
  }
}
@layer base {
  *, ::after, ::before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    border: 0 solid;
  }
  html, :host {
    line-height: 1.5;
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }
  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }
  abbr:where([title]) {
    -webkit-text-decoration: underline dotted;
    text-decoration: underline dotted;
  }
  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }
  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }
  b, strong {
    font-weight: bolder;
  }
  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }
  small {
    font-size: 80%;
  }
  sub, sup {
    font-size: 75%;
    line-height: 0;
    position: relative;
    vertical-align: baseline;
  }
  sub {
    bottom: -0.25em;
  }
  sup {
    top: -0.5em;
  }
  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }
  :-moz-focusring {
    outline: auto;
  }
  progress {
    vertical-align: baseline;
  }
  summary {
    display: list-item;
  }
  ol, ul, menu {
    list-style: none;
  }
  img, svg, video, canvas, audio, iframe, embed, object {
    display: block;
    vertical-align: middle;
  }
  img, video {
    max-width: 100%;
    height: auto;
  }
  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    border-radius: 0;
    background-color: transparent;
    opacity: 1;
  }
  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }
  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }
  ::file-selector-button {
    margin-inline-end: 4px;
  }
  ::placeholder {
    opacity: 1;
  }
  @supports (not (-webkit-appearance: -apple-pay-button))  or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentcolor;
      @supports (color: color-mix(in lab, red, red)) {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }
  textarea {
    resize: vertical;
  }
  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }
  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }
  ::-webkit-datetime-edit {
    display: inline-flex;
  }
  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }
  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }
  :-moz-ui-invalid {
    box-shadow: none;
  }
  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }
  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }
  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }
}
@layer utilities {
  .invisible {
    visibility: hidden;
  }
  .visible {
    visibility: visible;
  }
  .sr-only {
    position: absolute;
    width: 1px;
    height: 1px;
    padding: 0;
    margin: -1px;
    overflow: hidden;
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
  }
  .absolute {
    position: absolute;
  }
  .relative {
    position: relative;
  }
  .static {
    position: static;
  }
  .sticky {
    position: sticky;
  }
  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }
  .inset-x-0 {
    inset-inline: calc(var(--spacing) * 0);
  }
  .top-0 {
    top: calc(var(--spacing) * 0);
  }
  .top-1\/2 {
    top: calc(1/2 * 100%);
  }
  .top-4 {
    top: calc(var(--spacing) * 4);
  }
  .-right-4 {
    right: calc(var(--spacing) * -4);
  }
  .right-0 {
    right: calc(var(--spacing) * 0);
  }
  .right-3 {
    right: calc(var(--spacing) * 3);
  }
  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }
  .left-0 {
    left: calc(var(--spacing) * 0);
  }
  .isolate {
    isolation: isolate;
  }
  .z-10 {
    z-index: 10;
  }
  .z-50 {
    z-index: 50;
  }
  .z-\[1\] {
    z-index: 1;
  }
  .order-1 {
    order: 1;
  }
  .order-2 {
    order: 2;
  }
  .col-span-1 {
    grid-column: span 1 / span 1;
  }
  .container {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
  }
  .mx-auto {
    margin-inline: auto;
  }
  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }
  .prose {
    color: var(--tw-prose-body);
    max-width: 65ch;
    :where(p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    :where([class~="lead"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-lead);
      font-size: 1.25em;
      line-height: 1.6;
      margin-top: 1.2em;
      margin-bottom: 1.2em;
    }
    :where(a):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-links);
      text-decoration: underline;
      font-weight: 500;
    }
    :where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-bold);
      font-weight: 600;
    }
    :where(a strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(blockquote strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(thead th strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: decimal;
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
    }
    :where(ol[type="A"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-alpha;
    }
    :where(ol[type="a"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-alpha;
    }
    :where(ol[type="A" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-alpha;
    }
    :where(ol[type="a" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-alpha;
    }
    :where(ol[type="I"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-roman;
    }
    :where(ol[type="i"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-roman;
    }
    :where(ol[type="I" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: upper-roman;
    }
    :where(ol[type="i" s]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: lower-roman;
    }
    :where(ol[type="1"]):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: decimal;
    }
    :where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      list-style-type: disc;
      margin-top: 1.25em;
      margin-bottom: 1.25em;
      padding-inline-start: 1.625em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
      font-weight: 400;
      color: var(--tw-prose-counters);
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *))::marker {
      color: var(--tw-prose-bullets);
    }
    :where(dt):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      margin-top: 1.25em;
    }
    :where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-color: var(--tw-prose-hr);
      border-top-width: 1;
      margin-top: 3em;
      margin-bottom: 3em;
    }
    :where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 500;
      font-style: italic;
      color: var(--tw-prose-quotes);
      border-inline-start-width: 0.25rem;
      border-inline-start-color: var(--tw-prose-quote-borders);
      quotes: "\201C""\201D""\2018""\2019";
      margin-top: 1.6em;
      margin-bottom: 1.6em;
      padding-inline-start: 1em;
    }
    :where(blockquote p:first-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: open-quote;
    }
    :where(blockquote p:last-of-type):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: close-quote;
    }
    :where(h1):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 800;
      font-size: 2.25em;
      margin-top: 0;
      margin-bottom: 0.8888889em;
      line-height: 1.1111111;
    }
    :where(h1 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 900;
      color: inherit;
    }
    :where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 700;
      font-size: 1.5em;
      margin-top: 2em;
      margin-bottom: 1em;
      line-height: 1.3333333;
    }
    :where(h2 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 800;
      color: inherit;
    }
    :where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      font-size: 1.25em;
      margin-top: 1.6em;
      margin-bottom: 0.6em;
      line-height: 1.6;
    }
    :where(h3 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 700;
      color: inherit;
    }
    :where(h4):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      margin-top: 1.5em;
      margin-bottom: 0.5em;
      line-height: 1.5;
    }
    :where(h4 strong):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 700;
      color: inherit;
    }
    :where(img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(picture):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      display: block;
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(video):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(kbd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      font-weight: 500;
      font-family: inherit;
      color: var(--tw-prose-kbd);
      box-shadow: 0 0 0 1px rgb(var(--tw-prose-kbd-shadows) / 10%), 0 3px 0 rgb(var(--tw-prose-kbd-shadows) / 10%);
      font-size: 0.875em;
      border-radius: 0.3125rem;
      padding-top: 0.1875em;
      padding-inline-end: 0.375em;
      padding-bottom: 0.1875em;
      padding-inline-start: 0.375em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-code);
      font-weight: 600;
      font-size: 0.875em;
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: "`";
    }
    :where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: "`";
    }
    :where(a code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(h1 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(h2 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
      font-size: 0.875em;
    }
    :where(h3 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
      font-size: 0.9em;
    }
    :where(h4 code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(blockquote code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(thead th code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: inherit;
    }
    :where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-pre-code);
      background-color: var(--tw-prose-pre-bg);
      overflow-x: auto;
      font-weight: 400;
      font-size: 0.875em;
      line-height: 1.7142857;
      margin-top: 1.7142857em;
      margin-bottom: 1.7142857em;
      border-radius: 0.375rem;
      padding-top: 0.8571429em;
      padding-inline-end: 1.1428571em;
      padding-bottom: 0.8571429em;
      padding-inline-start: 1.1428571em;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      background-color: transparent;
      border-width: 0;
      border-radius: 0;
      padding: 0;
      font-weight: inherit;
      color: inherit;
      font-size: inherit;
      font-family: inherit;
      line-height: inherit;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::before {
      content: none;
    }
    :where(pre code):not(:where([class~="not-prose"],[class~="not-prose"] *))::after {
      content: none;
    }
    :where(table):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      width: 100%;
      table-layout: auto;
      margin-top: 2em;
      margin-bottom: 2em;
      font-size: 0.875em;
      line-height: 1.7142857;
    }
    :where(thead):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-th-borders);
    }
    :where(thead th):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-headings);
      font-weight: 600;
      vertical-align: bottom;
      padding-inline-end: 0.5714286em;
      padding-bottom: 0.5714286em;
      padding-inline-start: 0.5714286em;
    }
    :where(tbody tr):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 1px;
      border-bottom-color: var(--tw-prose-td-borders);
    }
    :where(tbody tr:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-bottom-width: 0;
    }
    :where(tbody td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      vertical-align: baseline;
    }
    :where(tfoot):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      border-top-width: 1px;
      border-top-color: var(--tw-prose-th-borders);
    }
    :where(tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      vertical-align: top;
    }
    :where(th, td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      text-align: start;
    }
    :where(figure > *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(figcaption):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      color: var(--tw-prose-captions);
      font-size: 0.875em;
      line-height: 1.4285714;
      margin-top: 0.8571429em;
    }
    --tw-prose-body: oklch(37.3% 0.034 259.733);
    --tw-prose-headings: oklch(21% 0.034 264.665);
    --tw-prose-lead: oklch(44.6% 0.03 256.802);
    --tw-prose-links: oklch(21% 0.034 264.665);
    --tw-prose-bold: oklch(21% 0.034 264.665);
    --tw-prose-counters: oklch(55.1% 0.027 264.364);
    --tw-prose-bullets: oklch(87.2% 0.01 258.338);
    --tw-prose-hr: oklch(92.8% 0.006 264.531);
    --tw-prose-quotes: oklch(21% 0.034 264.665);
    --tw-prose-quote-borders: oklch(92.8% 0.006 264.531);
    --tw-prose-captions: oklch(55.1% 0.027 264.364);
    --tw-prose-kbd: oklch(21% 0.034 264.665);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(21% 0.034 264.665);
    --tw-prose-pre-code: oklch(92.8% 0.006 264.531);
    --tw-prose-pre-bg: oklch(27.8% 0.033 256.848);
    --tw-prose-th-borders: oklch(87.2% 0.01 258.338);
    --tw-prose-td-borders: oklch(92.8% 0.006 264.531);
    --tw-prose-invert-body: oklch(87.2% 0.01 258.338);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-bullets: oklch(44.6% 0.03 256.802);
    --tw-prose-invert-hr: oklch(37.3% 0.034 259.733);
    --tw-prose-invert-quotes: oklch(96.7% 0.003 264.542);
    --tw-prose-invert-quote-borders: oklch(37.3% 0.034 259.733);
    --tw-prose-invert-captions: oklch(70.7% 0.022 261.325);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(87.2% 0.01 258.338);
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: oklch(44.6% 0.03 256.802);
    --tw-prose-invert-td-borders: oklch(37.3% 0.034 259.733);
    font-size: 1rem;
    line-height: 1.75;
    :where(picture > img):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
      margin-bottom: 0;
    }
    :where(li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5em;
      margin-bottom: 0.5em;
    }
    :where(ol > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.375em;
    }
    :where(ul > li):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0.375em;
    }
    :where(.prose > ul > li p):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    :where(.prose > ul > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
    }
    :where(.prose > ul > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.25em;
    }
    :where(.prose > ol > li > p:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
    }
    :where(.prose > ol > li > p:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 1.25em;
    }
    :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.75em;
      margin-bottom: 0.75em;
    }
    :where(dl):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 1.25em;
      margin-bottom: 1.25em;
    }
    :where(dd):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0.5em;
      padding-inline-start: 1.625em;
    }
    :where(hr + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h2 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h3 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(h4 + *):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(thead th:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(thead th:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(tbody td, tfoot td):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-top: 0.5714286em;
      padding-inline-end: 0.5714286em;
      padding-bottom: 0.5714286em;
      padding-inline-start: 0.5714286em;
    }
    :where(tbody td:first-child, tfoot td:first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-start: 0;
    }
    :where(tbody td:last-child, tfoot td:last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      padding-inline-end: 0;
    }
    :where(figure):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 2em;
      margin-bottom: 2em;
    }
    :where(.prose > :first-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-top: 0;
    }
    :where(.prose > :last-child):not(:where([class~="not-prose"],[class~="not-prose"] *)) {
      margin-bottom: 0;
    }
  }
  .mt-1 {
    margin-top: calc(var(--spacing) * 1);
  }
  .mt-2 {
    margin-top: calc(var(--spacing) * 2);
  }
  .mt-4 {
    margin-top: calc(var(--spacing) * 4);
  }
  .mt-8 {
    margin-top: calc(var(--spacing) * 8);
  }
  .mt-10 {
    margin-top: calc(var(--spacing) * 10);
  }
  .mt-16 {
    margin-top: calc(var(--spacing) * 16);
  }
  .mr-2 {
    margin-right: calc(var(--spacing) * 2);
  }
  .mr-10 {
    margin-right: calc(var(--spacing) * 10);
  }
  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }
  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }
  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }
  .mb-6 {
    margin-bottom: calc(var(--spacing) * 6);
  }
  .ml-2 {
    margin-left: calc(var(--spacing) * 2);
  }
  .block {
    display: block;
  }
  .contents {
    display: contents;
  }
  .flex {
    display: flex;
  }
  .grid {
    display: grid;
  }
  .hidden {
    display: none;
  }
  .inline {
    display: inline;
  }
  .inline-block {
    display: inline-block;
  }
  .inline-flex {
    display: inline-flex;
  }
  .table {
    display: table;
  }
  .h-1 {
    height: calc(var(--spacing) * 1);
  }
  .h-2 {
    height: calc(var(--spacing) * 2);
  }
  .h-5 {
    height: calc(var(--spacing) * 5);
  }
  .h-8 {
    height: calc(var(--spacing) * 8);
  }
  .h-9 {
    height: calc(var(--spacing) * 9);
  }
  .h-10 {
    height: calc(var(--spacing) * 10);
  }
  .h-\[1px\] {
    height: 1px;
  }
  .h-full {
    height: 100%;
  }
  .h-px {
    height: 1px;
  }
  .min-h-40 {
    min-height: calc(var(--spacing) * 40);
  }
  .min-h-screen {
    min-height: 100vh;
  }
  .w-1 {
    width: calc(var(--spacing) * 1);
  }
  .w-1\/6 {
    width: calc(1/6 * 100%);
  }
  .w-2\/3 {
    width: calc(2/3 * 100%);
  }
  .w-2\/6 {
    width: calc(2/6 * 100%);
  }
  .w-5 {
    width: calc(var(--spacing) * 5);
  }
  .w-5\/6 {
    width: calc(5/6 * 100%);
  }
  .w-8 {
    width: calc(var(--spacing) * 8);
  }
  .w-10 {
    width: calc(var(--spacing) * 10);
  }
  .w-12 {
    width: calc(var(--spacing) * 12);
  }
  .w-14 {
    width: calc(var(--spacing) * 14);
  }
  .w-18 {
    width: calc(var(--spacing) * 18);
  }
  .w-48 {
    width: calc(var(--spacing) * 48);
  }
  .w-fit {
    width: fit-content;
  }
  .w-full {
    width: 100%;
  }
  .w-px {
    width: 1px;
  }
  .max-w-6xl {
    max-width: var(--container-6xl);
  }
  .max-w-max {
    max-width: max-content;
  }
  .max-w-screen-lg {
    max-width: var(--breakpoint-lg);
  }
  .min-w-\[2\.5rem\] {
    min-width: 2.5rem;
  }
  .min-w-\[200px\] {
    min-width: 200px;
  }
  .flex-1 {
    flex: 1;
  }
  .flex-grow {
    flex-grow: 1;
  }
  .table-fixed {
    table-layout: fixed;
  }
  .origin-left {
    transform-origin: left;
  }
  .origin-top-left {
    transform-origin: top left;
  }
  .-translate-x-2 {
    --tw-translate-x: calc(var(--spacing) * -2);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .translate-x-\[-200\%\] {
    --tw-translate-x: -200%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1 {
    --tw-translate-y: calc(var(--spacing) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1/2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }
  .scale-95 {
    --tw-scale-x: 95%;
    --tw-scale-y: 95%;
    --tw-scale-z: 95%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-105 {
    --tw-scale-x: 105%;
    --tw-scale-y: 105%;
    --tw-scale-z: 105%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .scale-x-0 {
    --tw-scale-x: 0%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }
  .transform {
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .transform-gpu {
    transform: translateZ(0) var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
  }
  .cursor-not-allowed {
    cursor: not-allowed;
  }
  .cursor-pointer {
    cursor: pointer;
  }
  .columns-1 {
    columns: 1;
  }
  .break-inside-avoid {
    break-inside: avoid;
  }
  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }
  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }
  .flex-col {
    flex-direction: column;
  }
  .flex-wrap {
    flex-wrap: wrap;
  }
  .items-center {
    align-items: center;
  }
  .items-start {
    align-items: flex-start;
  }
  .justify-between {
    justify-content: space-between;
  }
  .justify-center {
    justify-content: center;
  }
  .justify-normal {
    justify-content: normal;
  }
  .gap-0\.5 {
    gap: calc(var(--spacing) * 0.5);
  }
  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }
  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }
  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }
  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }
  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }
  .gap-5 {
    gap: calc(var(--spacing) * 5);
  }
  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }
  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }
  .space-y-1 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 1) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-2 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 2) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 2) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-3 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-4 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-6 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 6) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 6) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .space-y-8 {
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
    }
  }
  .gap-x-3 {
    column-gap: calc(var(--spacing) * 3);
  }
  .space-x-1\.5 {
    :where(& > :not(:last-child)) {
      --tw-space-x-reverse: 0;
      margin-inline-start: calc(calc(var(--spacing) * 1.5) * var(--tw-space-x-reverse));
      margin-inline-end: calc(calc(var(--spacing) * 1.5) * calc(1 - var(--tw-space-x-reverse)));
    }
  }
  .gap-y-2 {
    row-gap: calc(var(--spacing) * 2);
  }
  .divide-y {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
  }
  .divide-blue-100 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-blue-100);
    }
  }
  .divide-neutral-100 {
    :where(& > :not(:last-child)) {
      border-color: var(--color-neutral-100);
    }
  }
  .truncate {
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
  }
  .overflow-hidden {
    overflow: hidden;
  }
  .rounded {
    border-radius: 0.25rem;
  }
  .rounded-full {
    border-radius: calc(infinity * 1px);
  }
  .rounded-lg {
    border-radius: var(--radius-lg);
  }
  .rounded-md {
    border-radius: var(--radius-md);
  }
  .rounded-xl {
    border-radius: var(--radius-xl);
  }
  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }
  .border-2 {
    border-style: var(--tw-border-style);
    border-width: 2px;
  }
  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }
  .border-t-4 {
    border-top-style: var(--tw-border-style);
    border-top-width: 4px;
  }
  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }
  .border-b-2 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 2px;
  }
  .border-b-4 {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 4px;
  }
  .border-blue-100 {
    border-color: var(--color-blue-100);
  }
  .border-blue-400 {
    border-color: var(--color-blue-400);
  }
  .border-blue-500 {
    border-color: var(--color-blue-500);
  }
  .border-gray-200 {
    border-color: var(--color-gray-200);
  }
  .border-gray-300 {
    border-color: var(--color-gray-300);
  }
  .border-neutral-200 {
    border-color: var(--color-neutral-200);
  }
  .border-neutral-200\/50 {
    border-color: color-mix(in srgb, oklch(92.2% 0 0) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-neutral-200) 50%, transparent);
    }
  }
  .border-neutral-200\/60 {
    border-color: color-mix(in srgb, oklch(92.2% 0 0) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-neutral-200) 60%, transparent);
    }
  }
  .border-neutral-200\/80 {
    border-color: color-mix(in srgb, oklch(92.2% 0 0) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-neutral-200) 80%, transparent);
    }
  }
  .border-neutral-300\/50 {
    border-color: color-mix(in srgb, oklch(87% 0 0) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-neutral-300) 50%, transparent);
    }
  }
  .border-sky-200\/50 {
    border-color: color-mix(in srgb, oklch(90.1% 0.058 230.902) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-sky-200) 50%, transparent);
    }
  }
  .border-slate-200\/50 {
    border-color: color-mix(in srgb, oklch(92.9% 0.013 255.508) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-slate-200) 50%, transparent);
    }
  }
  .border-transparent {
    border-color: transparent;
  }
  .border-white\/20 {
    border-color: color-mix(in srgb, #fff 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }
  .bg-blue-50\/80 {
    background-color: color-mix(in srgb, oklch(97% 0.014 254.604) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-50) 80%, transparent);
    }
  }
  .bg-blue-50\/90 {
    background-color: color-mix(in srgb, oklch(97% 0.014 254.604) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-50) 90%, transparent);
    }
  }
  .bg-blue-100 {
    background-color: var(--color-blue-100);
  }
  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }
  .bg-blue-500\/90 {
    background-color: color-mix(in srgb, oklch(62.3% 0.214 259.815) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-500) 90%, transparent);
    }
  }
  .bg-blue-600 {
    background-color: var(--color-blue-600);
  }
  .bg-neutral-50\/80 {
    background-color: color-mix(in srgb, oklch(98.5% 0 0) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-neutral-50) 80%, transparent);
    }
  }
  .bg-neutral-100\/90 {
    background-color: color-mix(in srgb, oklch(97% 0 0) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-neutral-100) 90%, transparent);
    }
  }
  .bg-neutral-200 {
    background-color: var(--color-neutral-200);
  }
  .bg-sky-50 {
    background-color: var(--color-sky-50);
  }
  .bg-sky-50\/30 {
    background-color: color-mix(in srgb, oklch(97.7% 0.013 236.62) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-sky-50) 30%, transparent);
    }
  }
  .bg-sky-100\/80 {
    background-color: color-mix(in srgb, oklch(95.1% 0.026 236.824) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-sky-100) 80%, transparent);
    }
  }
  .bg-sky-500\/90 {
    background-color: color-mix(in srgb, oklch(68.5% 0.169 237.323) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-sky-500) 90%, transparent);
    }
  }
  .bg-transparent {
    background-color: transparent;
  }
  .bg-white {
    background-color: var(--color-white);
  }
  .bg-white\/50 {
    background-color: color-mix(in srgb, #fff 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 50%, transparent);
    }
  }
  .bg-white\/60 {
    background-color: color-mix(in srgb, #fff 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
  }
  .bg-white\/70 {
    background-color: color-mix(in srgb, #fff 70%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 70%, transparent);
    }
  }
  .bg-white\/80 {
    background-color: color-mix(in srgb, #fff 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
  }
  .bg-white\/90 {
    background-color: color-mix(in srgb, #fff 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 90%, transparent);
    }
  }
  .bg-white\/95 {
    background-color: color-mix(in srgb, #fff 95%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 95%, transparent);
    }
  }
  .bg-gradient-to-b {
    --tw-gradient-position: to bottom in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-br {
    --tw-gradient-position: to bottom right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .bg-gradient-to-r {
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
  }
  .from-sky-50\/50 {
    --tw-gradient-from: color-mix(in srgb, oklch(97.7% 0.013 236.62) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-sky-50) 50%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-sky-50\/90 {
    --tw-gradient-from: color-mix(in srgb, oklch(97.7% 0.013 236.62) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-sky-50) 90%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-sky-400 {
    --tw-gradient-from: var(--color-sky-400);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-sky-500\/95 {
    --tw-gradient-from: color-mix(in srgb, oklch(68.5% 0.169 237.323) 95%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-sky-500) 95%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-transparent {
    --tw-gradient-from: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-white\/60 {
    --tw-gradient-from: color-mix(in srgb, #fff 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-white) 60%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-white\/80 {
    --tw-gradient-from: color-mix(in srgb, #fff 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .from-white\/95 {
    --tw-gradient-from: color-mix(in srgb, #fff 95%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-white) 95%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .via-blue-50\/40 {
    --tw-gradient-via: color-mix(in srgb, oklch(97% 0.014 254.604) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-via: color-mix(in oklab, var(--color-blue-50) 40%, transparent);
    }
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-sky-50\/30 {
    --tw-gradient-via: color-mix(in srgb, oklch(97.7% 0.013 236.62) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-via: color-mix(in oklab, var(--color-sky-50) 30%, transparent);
    }
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-sky-50\/60 {
    --tw-gradient-via: color-mix(in srgb, oklch(97.7% 0.013 236.62) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-via: color-mix(in oklab, var(--color-sky-50) 60%, transparent);
    }
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-sky-200 {
    --tw-gradient-via: var(--color-sky-200);
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-sky-500\/95 {
    --tw-gradient-via: color-mix(in srgb, oklch(68.5% 0.169 237.323) 95%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-via: color-mix(in oklab, var(--color-sky-500) 95%, transparent);
    }
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .via-white\/20 {
    --tw-gradient-via: color-mix(in srgb, #fff 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-via: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
  }
  .to-blue-50\/20 {
    --tw-gradient-to: color-mix(in srgb, oklch(97% 0.014 254.604) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-blue-50) 20%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-blue-50\/60 {
    --tw-gradient-to: color-mix(in srgb, oklch(97% 0.014 254.604) 60%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-blue-50) 60%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-blue-50\/80 {
    --tw-gradient-to: color-mix(in srgb, oklch(97% 0.014 254.604) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-blue-50) 80%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-blue-400\/95 {
    --tw-gradient-to: color-mix(in srgb, oklch(70.7% 0.165 254.624) 95%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-blue-400) 95%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-blue-500 {
    --tw-gradient-to: var(--color-blue-500);
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-neutral-50\/30 {
    --tw-gradient-to: color-mix(in srgb, oklch(98.5% 0 0) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-neutral-50) 30%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-neutral-50\/90 {
    --tw-gradient-to: color-mix(in srgb, oklch(98.5% 0 0) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-neutral-50) 90%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .to-transparent {
    --tw-gradient-to: transparent;
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
  }
  .p-2 {
    padding: calc(var(--spacing) * 2);
  }
  .p-3 {
    padding: calc(var(--spacing) * 3);
  }
  .p-4 {
    padding: calc(var(--spacing) * 4);
  }
  .p-5 {
    padding: calc(var(--spacing) * 5);
  }
  .p-6 {
    padding: calc(var(--spacing) * 6);
  }
  .px-1 {
    padding-inline: calc(var(--spacing) * 1);
  }
  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }
  .px-2\.5 {
    padding-inline: calc(var(--spacing) * 2.5);
  }
  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }
  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }
  .py-0\.5 {
    padding-block: calc(var(--spacing) * 0.5);
  }
  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }
  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }
  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }
  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }
  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }
  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }
  .py-5 {
    padding-block: calc(var(--spacing) * 5);
  }
  .py-6 {
    padding-block: calc(var(--spacing) * 6);
  }
  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }
  .pt-1 {
    padding-top: calc(var(--spacing) * 1);
  }
  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }
  .pr-4 {
    padding-right: calc(var(--spacing) * 4);
  }
  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }
  .text-center {
    text-align: center;
  }
  .text-left {
    text-align: left;
  }
  .text-right {
    text-align: right;
  }
  .font-mono {
    font-family: var(--font-mono);
  }
  .font-sans {
    font-family: var(--font-sans);
  }
  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }
  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }
  .text-4xl {
    font-size: var(--text-4xl);
    line-height: var(--tw-leading, var(--text-4xl--line-height));
  }
  .text-7xl {
    font-size: var(--text-7xl);
    line-height: var(--tw-leading, var(--text-7xl--line-height));
  }
  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }
  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }
  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }
  .text-xl {
    font-size: var(--text-xl);
    line-height: var(--tw-leading, var(--text-xl--line-height));
  }
  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }
  .leading-relaxed {
    --tw-leading: var(--leading-relaxed);
    line-height: var(--leading-relaxed);
  }
  .leading-tight {
    --tw-leading: var(--leading-tight);
    line-height: var(--leading-tight);
  }
  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }
  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }
  .font-normal {
    --tw-font-weight: var(--font-weight-normal);
    font-weight: var(--font-weight-normal);
  }
  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }
  .tracking-tight {
    --tw-tracking: var(--tracking-tight);
    letter-spacing: var(--tracking-tight);
  }
  .whitespace-nowrap {
    white-space: nowrap;
  }
  .text-blue-600 {
    color: var(--color-blue-600);
  }
  .text-blue-700 {
    color: var(--color-blue-700);
  }
  .text-gray-800 {
    color: var(--color-gray-800);
  }
  .text-gray-900 {
    color: var(--color-gray-900);
  }
  .text-green-600 {
    color: var(--color-green-600);
  }
  .text-neutral-300 {
    color: var(--color-neutral-300);
  }
  .text-neutral-400 {
    color: var(--color-neutral-400);
  }
  .text-neutral-500 {
    color: var(--color-neutral-500);
  }
  .text-neutral-600 {
    color: var(--color-neutral-600);
  }
  .text-neutral-700 {
    color: var(--color-neutral-700);
  }
  .text-neutral-800 {
    color: var(--color-neutral-800);
  }
  .text-neutral-900 {
    color: var(--color-neutral-900);
  }
  .text-red-600 {
    color: var(--color-red-600);
  }
  .text-sky-600 {
    color: var(--color-sky-600);
  }
  .text-sky-700 {
    color: var(--color-sky-700);
  }
  .text-slate-600 {
    color: var(--color-slate-600);
  }
  .text-slate-900 {
    color: var(--color-slate-900);
  }
  .text-white {
    color: var(--color-white);
  }
  .italic {
    font-style: italic;
  }
  .underline {
    text-decoration-line: underline;
  }
  .decoration-neutral-300 {
    text-decoration-color: var(--color-neutral-300);
  }
  .underline-offset-2 {
    text-underline-offset: 2px;
  }
  .placeholder-neutral-500 {
    &::placeholder {
      color: var(--color-neutral-500);
    }
  }
  .opacity-0 {
    opacity: 0%;
  }
  .opacity-50 {
    opacity: 50%;
  }
  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 4px 6px -4px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .ring-1 {
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }
  .shadow-blue-200\/20 {
    --tw-shadow-color: color-mix(in srgb, oklch(88.2% 0.059 254.128) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-blue-200) 20%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-neutral-100\/20 {
    --tw-shadow-color: color-mix(in srgb, oklch(97% 0 0) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-neutral-100) 20%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-sky-100\/20 {
    --tw-shadow-color: color-mix(in srgb, oklch(95.1% 0.026 236.824) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-sky-100) 20%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-sky-200\/30 {
    --tw-shadow-color: color-mix(in srgb, oklch(90.1% 0.058 230.902) 30%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-sky-200) 30%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .shadow-slate-200\/20 {
    --tw-shadow-color: color-mix(in srgb, oklch(92.9% 0.013 255.508) 20%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-slate-200) 20%, transparent) var(--tw-shadow-alpha), transparent);
    }
  }
  .ring-blue-100 {
    --tw-ring-color: var(--color-blue-100);
  }
  .ring-neutral-300 {
    --tw-ring-color: var(--color-neutral-300);
  }
  .ring-sky-200\/50 {
    --tw-ring-color: color-mix(in srgb, oklch(90.1% 0.058 230.902) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-ring-color: color-mix(in oklab, var(--color-sky-200) 50%, transparent);
    }
  }
  .blur-\[0\.5px\] {
    --tw-blur: blur(0.5px);
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .filter {
    filter: var(--tw-blur,) var(--tw-brightness,) var(--tw-contrast,) var(--tw-grayscale,) var(--tw-hue-rotate,) var(--tw-invert,) var(--tw-saturate,) var(--tw-sepia,) var(--tw-drop-shadow,);
  }
  .backdrop-blur-\[2px\] {
    --tw-backdrop-blur: blur(2px);
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-md {
    --tw-backdrop-blur: blur(var(--blur-md));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
  }
  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }
  .duration-200 {
    --tw-duration: 200ms;
    transition-duration: 200ms;
  }
  .duration-300 {
    --tw-duration: 300ms;
    transition-duration: 300ms;
  }
  .duration-1000 {
    --tw-duration: 1000ms;
    transition-duration: 1000ms;
  }
  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }
  .ease-out {
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
  }
  .prose-neutral {
    --tw-prose-body: oklch(37.1% 0 0);
    --tw-prose-headings: oklch(20.5% 0 0);
    --tw-prose-lead: oklch(43.9% 0 0);
    --tw-prose-links: oklch(20.5% 0 0);
    --tw-prose-bold: oklch(20.5% 0 0);
    --tw-prose-counters: oklch(55.6% 0 0);
    --tw-prose-bullets: oklch(87% 0 0);
    --tw-prose-hr: oklch(92.2% 0 0);
    --tw-prose-quotes: oklch(20.5% 0 0);
    --tw-prose-quote-borders: oklch(92.2% 0 0);
    --tw-prose-captions: oklch(55.6% 0 0);
    --tw-prose-kbd: oklch(20.5% 0 0);
    --tw-prose-kbd-shadows: NaN NaN NaN;
    --tw-prose-code: oklch(20.5% 0 0);
    --tw-prose-pre-code: oklch(92.2% 0 0);
    --tw-prose-pre-bg: oklch(26.9% 0 0);
    --tw-prose-th-borders: oklch(87% 0 0);
    --tw-prose-td-borders: oklch(92.2% 0 0);
    --tw-prose-invert-body: oklch(87% 0 0);
    --tw-prose-invert-headings: #fff;
    --tw-prose-invert-lead: oklch(70.8% 0 0);
    --tw-prose-invert-links: #fff;
    --tw-prose-invert-bold: #fff;
    --tw-prose-invert-counters: oklch(70.8% 0 0);
    --tw-prose-invert-bullets: oklch(43.9% 0 0);
    --tw-prose-invert-hr: oklch(37.1% 0 0);
    --tw-prose-invert-quotes: oklch(97% 0 0);
    --tw-prose-invert-quote-borders: oklch(37.1% 0 0);
    --tw-prose-invert-captions: oklch(70.8% 0 0);
    --tw-prose-invert-kbd: #fff;
    --tw-prose-invert-kbd-shadows: 255 255 255;
    --tw-prose-invert-code: #fff;
    --tw-prose-invert-pre-code: oklch(87% 0 0);
    --tw-prose-invert-pre-bg: rgb(0 0 0 / 50%);
    --tw-prose-invert-th-borders: oklch(43.9% 0 0);
    --tw-prose-invert-td-borders: oklch(37.1% 0 0);
  }
  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }
  .group-hover\:visible {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        visibility: visible;
      }
    }
  }
  .group-hover\:translate-x-0 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:translate-x-0\.5 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 0.5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:translate-x-1 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:translate-x-\[200\%\] {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-x: 200%;
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:-translate-y-0\.5 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -0.5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:translate-y-0 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * 0);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .group-hover\:scale-110 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 110%;
        --tw-scale-y: 110%;
        --tw-scale-z: 110%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\:scale-x-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 100%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .group-hover\:rotate-12 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        rotate: 12deg;
      }
    }
  }
  .group-hover\:border-sky-200 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        border-color: var(--color-sky-200);
      }
    }
  }
  .group-hover\:border-sky-300 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        border-color: var(--color-sky-300);
      }
    }
  }
  .group-hover\:bg-sky-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        background-color: var(--color-sky-100);
      }
    }
  }
  .group-hover\:text-blue-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-blue-500);
      }
    }
  }
  .group-hover\:text-sky-500 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-sky-500);
      }
    }
  }
  .group-hover\:text-sky-600 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-sky-600);
      }
    }
  }
  .group-hover\:text-sky-700 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        color: var(--color-sky-700);
      }
    }
  }
  .group-hover\:opacity-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        opacity: 100%;
      }
    }
  }
  .before\:absolute {
    &::before {
      content: var(--tw-content);
      position: absolute;
    }
  }
  .before\:inset-0 {
    &::before {
      content: var(--tw-content);
      inset: calc(var(--spacing) * 0);
    }
  }
  .before\:rounded-lg {
    &::before {
      content: var(--tw-content);
      border-radius: var(--radius-lg);
    }
  }
  .before\:bg-gradient-to-br {
    &::before {
      content: var(--tw-content);
      --tw-gradient-position: to bottom right in oklab;
      background-image: linear-gradient(var(--tw-gradient-stops));
    }
  }
  .before\:bg-gradient-to-r {
    &::before {
      content: var(--tw-content);
      --tw-gradient-position: to right in oklab;
      background-image: linear-gradient(var(--tw-gradient-stops));
    }
  }
  .before\:from-transparent {
    &::before {
      content: var(--tw-content);
      --tw-gradient-from: transparent;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .before\:to-transparent {
    &::before {
      content: var(--tw-content);
      --tw-gradient-to: transparent;
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .before\:opacity-0 {
    &::before {
      content: var(--tw-content);
      opacity: 0%;
    }
  }
  .before\:opacity-100 {
    &::before {
      content: var(--tw-content);
      opacity: 100%;
    }
  }
  .before\:transition-all {
    &::before {
      content: var(--tw-content);
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .before\:transition-opacity {
    &::before {
      content: var(--tw-content);
      transition-property: opacity;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
  }
  .before\:duration-300 {
    &::before {
      content: var(--tw-content);
      --tw-duration: 300ms;
      transition-duration: 300ms;
    }
  }
  .before\:duration-500 {
    &::before {
      content: var(--tw-content);
      --tw-duration: 500ms;
      transition-duration: 500ms;
    }
  }
  .group-hover\:before\:opacity-100 {
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        &::before {
          content: var(--tw-content);
          opacity: 100%;
        }
      }
    }
  }
  .last\:mb-0 {
    &:last-child {
      margin-bottom: calc(var(--spacing) * 0);
    }
  }
  .last\:border-b-0 {
    &:last-child {
      border-bottom-style: var(--tw-border-style);
      border-bottom-width: 0px;
    }
  }
  .hover\:translate-x-1 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-x: calc(var(--spacing) * 1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:-translate-y-0\.5 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -0.5);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:-translate-y-1 {
    &:hover {
      @media (hover: hover) {
        --tw-translate-y: calc(var(--spacing) * -1);
        translate: var(--tw-translate-x) var(--tw-translate-y);
      }
    }
  }
  .hover\:scale-105 {
    &:hover {
      @media (hover: hover) {
        --tw-scale-x: 105%;
        --tw-scale-y: 105%;
        --tw-scale-z: 105%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
  }
  .hover\:scale-\[1\.01\] {
    &:hover {
      @media (hover: hover) {
        scale: 1.01;
      }
    }
  }
  .hover\:scale-\[1\.02\] {
    &:hover {
      @media (hover: hover) {
        scale: 1.02;
      }
    }
  }
  .hover\:border-blue-200 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-blue-200);
      }
    }
  }
  .hover\:border-sky-200\/50 {
    &:hover {
      @media (hover: hover) {
        border-color: color-mix(in srgb, oklch(90.1% 0.058 230.902) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-sky-200) 50%, transparent);
        }
      }
    }
  }
  .hover\:border-sky-500 {
    &:hover {
      @media (hover: hover) {
        border-color: var(--color-sky-500);
      }
    }
  }
  .hover\:border-sky-500\/20 {
    &:hover {
      @media (hover: hover) {
        border-color: color-mix(in srgb, oklch(68.5% 0.169 237.323) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-sky-500) 20%, transparent);
        }
      }
    }
  }
  .hover\:border-transparent {
    &:hover {
      @media (hover: hover) {
        border-color: transparent;
      }
    }
  }
  .hover\:bg-blue-50\/90 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(97% 0.014 254.604) 90%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-blue-50) 90%, transparent);
        }
      }
    }
  }
  .hover\:bg-blue-100\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(93.2% 0.032 255.585) 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-blue-100) 80%, transparent);
        }
      }
    }
  }
  .hover\:bg-blue-500 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-500);
      }
    }
  }
  .hover\:bg-blue-700 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-blue-700);
      }
    }
  }
  .hover\:bg-cyan-50\/90 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(98.4% 0.019 200.873) 90%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-cyan-50) 90%, transparent);
        }
      }
    }
  }
  .hover\:bg-gray-200 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-200);
      }
    }
  }
  .hover\:bg-gray-600 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-gray-600);
      }
    }
  }
  .hover\:bg-neutral-100 {
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-neutral-100);
      }
    }
  }
  .hover\:bg-neutral-100\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(97% 0 0) 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-neutral-100) 80%, transparent);
        }
      }
    }
  }
  .hover\:bg-sky-50\/80 {
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(97.7% 0.013 236.62) 80%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-sky-50) 80%, transparent);
        }
      }
    }
  }
  .hover\:bg-gradient-to-br {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-position: to bottom right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
      }
    }
  }
  .hover\:bg-gradient-to-r {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-position: to right in oklab;
        background-image: linear-gradient(var(--tw-gradient-stops));
      }
    }
  }
  .hover\:from-sky-50\/70 {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-from: color-mix(in srgb, oklch(97.7% 0.013 236.62) 70%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-gradient-from: color-mix(in oklab, var(--color-sky-50) 70%, transparent);
        }
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:from-sky-600\/95 {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-from: color-mix(in srgb, oklch(58.8% 0.158 241.966) 95%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-gradient-from: color-mix(in oklab, var(--color-sky-600) 95%, transparent);
        }
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:from-white {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-from: var(--color-white);
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:via-sky-50\/70 {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-via: color-mix(in srgb, oklch(97.7% 0.013 236.62) 70%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-gradient-via: color-mix(in oklab, var(--color-sky-50) 70%, transparent);
        }
        --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
      }
    }
  }
  .hover\:via-sky-600\/95 {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-via: color-mix(in srgb, oklch(58.8% 0.158 241.966) 95%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-gradient-via: color-mix(in oklab, var(--color-sky-600) 95%, transparent);
        }
        --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
        --tw-gradient-stops: var(--tw-gradient-via-stops);
      }
    }
  }
  .hover\:to-blue-50\/70 {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-to: color-mix(in srgb, oklch(97% 0.014 254.604) 70%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-gradient-to: color-mix(in oklab, var(--color-blue-50) 70%, transparent);
        }
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:to-blue-50\/95 {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-to: color-mix(in srgb, oklch(97% 0.014 254.604) 95%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-gradient-to: color-mix(in oklab, var(--color-blue-50) 95%, transparent);
        }
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:to-blue-700\/95 {
    &:hover {
      @media (hover: hover) {
        --tw-gradient-to: color-mix(in srgb, oklch(48.8% 0.243 264.376) 95%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-gradient-to: color-mix(in oklab, var(--color-blue-700) 95%, transparent);
        }
        --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
      }
    }
  }
  .hover\:text-blue-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-600);
      }
    }
  }
  .hover\:text-blue-700 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-blue-700);
      }
    }
  }
  .hover\:text-cyan-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-cyan-600);
      }
    }
  }
  .hover\:text-sky-600 {
    &:hover {
      @media (hover: hover) {
        color: var(--color-sky-600);
      }
    }
  }
  .hover\:text-white {
    &:hover {
      @media (hover: hover) {
        color: var(--color-white);
      }
    }
  }
  .hover\:underline {
    &:hover {
      @media (hover: hover) {
        text-decoration-line: underline;
      }
    }
  }
  .hover\:shadow-md {
    &:hover {
      @media (hover: hover) {
        --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:ring-1 {
    &:hover {
      @media (hover: hover) {
        --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
        box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
      }
    }
  }
  .hover\:shadow-sky-100\/30 {
    &:hover {
      @media (hover: hover) {
        --tw-shadow-color: color-mix(in srgb, oklch(95.1% 0.026 236.824) 30%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-sky-100) 30%, transparent) var(--tw-shadow-alpha), transparent);
        }
      }
    }
  }
  .hover\:shadow-sky-200\/40 {
    &:hover {
      @media (hover: hover) {
        --tw-shadow-color: color-mix(in srgb, oklch(90.1% 0.058 230.902) 40%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-sky-200) 40%, transparent) var(--tw-shadow-alpha), transparent);
        }
      }
    }
  }
  .hover\:ring-blue-300\/50 {
    &:hover {
      @media (hover: hover) {
        --tw-ring-color: color-mix(in srgb, oklch(80.9% 0.105 251.813) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--color-blue-300) 50%, transparent);
        }
      }
    }
  }
  .hover\:ring-sky-200 {
    &:hover {
      @media (hover: hover) {
        --tw-ring-color: var(--color-sky-200);
      }
    }
  }
  .hover\:before\:from-sky-50\/50 {
    &:hover {
      @media (hover: hover) {
        &::before {
          content: var(--tw-content);
          --tw-gradient-from: color-mix(in srgb, oklch(97.7% 0.013 236.62) 50%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-from: color-mix(in oklab, var(--color-sky-50) 50%, transparent);
          }
          --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }
      }
    }
  }
  .hover\:before\:to-sky-100\/50 {
    &:hover {
      @media (hover: hover) {
        &::before {
          content: var(--tw-content);
          --tw-gradient-to: color-mix(in srgb, oklch(95.1% 0.026 236.824) 50%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-to: color-mix(in oklab, var(--color-sky-100) 50%, transparent);
          }
          --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }
      }
    }
  }
  .focus\:border-sky-500 {
    &:focus {
      border-color: var(--color-sky-500);
    }
  }
  .focus\:ring-2 {
    &:focus {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus\:ring-blue-200 {
    &:focus {
      --tw-ring-color: var(--color-blue-200);
    }
  }
  .focus\:ring-sky-400\/50 {
    &:focus {
      --tw-ring-color: color-mix(in srgb, oklch(74.6% 0.16 232.661) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-sky-400) 50%, transparent);
      }
    }
  }
  .focus\:outline-none {
    &:focus {
      --tw-outline-style: none;
      outline-style: none;
    }
  }
  .focus-visible\:ring-2 {
    &:focus-visible {
      --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }
  .focus-visible\:ring-blue-500 {
    &:focus-visible {
      --tw-ring-color: var(--color-blue-500);
    }
  }
  .focus-visible\:ring-cyan-400 {
    &:focus-visible {
      --tw-ring-color: var(--color-cyan-400);
    }
  }
  .active\:bg-neutral-200 {
    &:active {
      background-color: var(--color-neutral-200);
    }
  }
  .active\:bg-sky-100 {
    &:active {
      background-color: var(--color-sky-100);
    }
  }
  .motion-safe\:group-hover\:scale-100 {
    @media (prefers-reduced-motion: no-preference) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          --tw-scale-x: 100%;
          --tw-scale-y: 100%;
          --tw-scale-z: 100%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .motion-safe\:hover\:-translate-y-0\.5 {
    @media (prefers-reduced-motion: no-preference) {
      &:hover {
        @media (hover: hover) {
          --tw-translate-y: calc(var(--spacing) * -0.5);
          translate: var(--tw-translate-x) var(--tw-translate-y);
        }
      }
    }
  }
  .motion-safe\:hover\:scale-105 {
    @media (prefers-reduced-motion: no-preference) {
      &:hover {
        @media (hover: hover) {
          --tw-scale-x: 105%;
          --tw-scale-y: 105%;
          --tw-scale-z: 105%;
          scale: var(--tw-scale-x) var(--tw-scale-y);
        }
      }
    }
  }
  .motion-safe\:hover\:scale-\[1\.02\] {
    @media (prefers-reduced-motion: no-preference) {
      &:hover {
        @media (hover: hover) {
          scale: 1.02;
        }
      }
    }
  }
  .sm\:mx-0 {
    @media (width >= 40rem) {
      margin-inline: calc(var(--spacing) * 0);
    }
  }
  .sm\:mt-0 {
    @media (width >= 40rem) {
      margin-top: calc(var(--spacing) * 0);
    }
  }
  .sm\:ml-6 {
    @media (width >= 40rem) {
      margin-left: calc(var(--spacing) * 6);
    }
  }
  .sm\:flex {
    @media (width >= 40rem) {
      display: flex;
    }
  }
  .sm\:grid-cols-2 {
    @media (width >= 40rem) {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }
  .sm\:flex-row {
    @media (width >= 40rem) {
      flex-direction: row;
    }
  }
  .sm\:items-center {
    @media (width >= 40rem) {
      align-items: center;
    }
  }
  .sm\:justify-center {
    @media (width >= 40rem) {
      justify-content: center;
    }
  }
  .sm\:px-6 {
    @media (width >= 40rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .sm\:py-24 {
    @media (width >= 40rem) {
      padding-block: calc(var(--spacing) * 24);
    }
  }
  .sm\:text-3xl {
    @media (width >= 40rem) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .sm\:text-8xl {
    @media (width >= 40rem) {
      font-size: var(--text-8xl);
      line-height: var(--tw-leading, var(--text-8xl--line-height));
    }
  }
  .sm\:text-base {
    @media (width >= 40rem) {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }
  .sm\:text-xl {
    @media (width >= 40rem) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }
  .md\:col-span-2 {
    @media (width >= 48rem) {
      grid-column: span 2 / span 2;
    }
  }
  .md\:mb-4 {
    @media (width >= 48rem) {
      margin-bottom: calc(var(--spacing) * 4);
    }
  }
  .md\:block {
    @media (width >= 48rem) {
      display: block;
    }
  }
  .md\:flex {
    @media (width >= 48rem) {
      display: flex;
    }
  }
  .md\:hidden {
    @media (width >= 48rem) {
      display: none;
    }
  }
  .md\:h-6 {
    @media (width >= 48rem) {
      height: calc(var(--spacing) * 6);
    }
  }
  .md\:columns-2 {
    @media (width >= 48rem) {
      columns: 2;
    }
  }
  .md\:grid-cols-3 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .md\:grid-cols-4 {
    @media (width >= 48rem) {
      grid-template-columns: repeat(4, minmax(0, 1fr));
    }
  }
  .md\:flex-row {
    @media (width >= 48rem) {
      flex-direction: row;
    }
  }
  .md\:items-center {
    @media (width >= 48rem) {
      align-items: center;
    }
  }
  .md\:gap-4 {
    @media (width >= 48rem) {
      gap: calc(var(--spacing) * 4);
    }
  }
  .md\:space-y-3 {
    @media (width >= 48rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 3) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 3) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .md\:p-3 {
    @media (width >= 48rem) {
      padding: calc(var(--spacing) * 3);
    }
  }
  .md\:px-2 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 2);
    }
  }
  .md\:px-8 {
    @media (width >= 48rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .md\:py-4 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 4);
    }
  }
  .md\:py-6 {
    @media (width >= 48rem) {
      padding-block: calc(var(--spacing) * 6);
    }
  }
  .md\:text-2xl {
    @media (width >= 48rem) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
  }
  .md\:text-3xl {
    @media (width >= 48rem) {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }
  .lg\:order-1 {
    @media (width >= 64rem) {
      order: 1;
    }
  }
  .lg\:order-2 {
    @media (width >= 64rem) {
      order: 2;
    }
  }
  .lg\:col-span-1 {
    @media (width >= 64rem) {
      grid-column: span 1 / span 1;
    }
  }
  .lg\:col-span-2 {
    @media (width >= 64rem) {
      grid-column: span 2 / span 2;
    }
  }
  .lg\:mt-12 {
    @media (width >= 64rem) {
      margin-top: calc(var(--spacing) * 12);
    }
  }
  .lg\:mb-4 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 4);
    }
  }
  .lg\:mb-8 {
    @media (width >= 64rem) {
      margin-bottom: calc(var(--spacing) * 8);
    }
  }
  .lg\:block {
    @media (width >= 64rem) {
      display: block;
    }
  }
  .lg\:h-12 {
    @media (width >= 64rem) {
      height: calc(var(--spacing) * 12);
    }
  }
  .lg\:min-h-screen {
    @media (width >= 64rem) {
      min-height: 100vh;
    }
  }
  .lg\:grid-cols-3 {
    @media (width >= 64rem) {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }
  .lg\:gap-3 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 3);
    }
  }
  .lg\:gap-6 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 6);
    }
  }
  .lg\:gap-8 {
    @media (width >= 64rem) {
      gap: calc(var(--spacing) * 8);
    }
  }
  .lg\:space-y-8 {
    @media (width >= 64rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
  }
  .lg\:p-6 {
    @media (width >= 64rem) {
      padding: calc(var(--spacing) * 6);
    }
  }
  .lg\:px-4 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 4);
    }
  }
  .lg\:px-6 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 6);
    }
  }
  .lg\:px-8 {
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 8);
    }
  }
  .lg\:py-4 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 4);
    }
  }
  .lg\:py-8 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 8);
    }
  }
  .lg\:py-12 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 12);
    }
  }
  .lg\:py-16 {
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 16);
    }
  }
  .lg\:text-left {
    @media (width >= 64rem) {
      text-align: left;
    }
  }
  .dark\:divide-blue-900\/50 {
    &:where(.dark, .dark *) {
      :where(& > :not(:last-child)) {
        border-color: color-mix(in srgb, oklch(37.9% 0.146 265.522) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-blue-900) 50%, transparent);
        }
      }
    }
  }
  .dark\:divide-neutral-900\/50 {
    &:where(.dark, .dark *) {
      :where(& > :not(:last-child)) {
        border-color: color-mix(in srgb, oklch(20.5% 0 0) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-neutral-900) 50%, transparent);
        }
      }
    }
  }
  .dark\:border-blue-500 {
    &:where(.dark, .dark *) {
      border-color: var(--color-blue-500);
    }
  }
  .dark\:border-blue-900\/50 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(37.9% 0.146 265.522) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-blue-900) 50%, transparent);
      }
    }
  }
  .dark\:border-blue-950 {
    &:where(.dark, .dark *) {
      border-color: var(--color-blue-950);
    }
  }
  .dark\:border-neutral-700\/50 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(37.1% 0 0) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-neutral-700) 50%, transparent);
      }
    }
  }
  .dark\:border-neutral-700\/60 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(37.1% 0 0) 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-neutral-700) 60%, transparent);
      }
    }
  }
  .dark\:border-neutral-700\/80 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(37.1% 0 0) 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-neutral-700) 80%, transparent);
      }
    }
  }
  .dark\:border-neutral-800 {
    &:where(.dark, .dark *) {
      border-color: var(--color-neutral-800);
    }
  }
  .dark\:border-neutral-800\/20 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(26.9% 0 0) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-neutral-800) 20%, transparent);
      }
    }
  }
  .dark\:border-neutral-800\/80 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(26.9% 0 0) 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-neutral-800) 80%, transparent);
      }
    }
  }
  .dark\:border-sky-700\/50 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(50% 0.134 242.749) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-sky-700) 50%, transparent);
      }
    }
  }
  .dark\:border-slate-700\/50 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(37.2% 0.044 257.287) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-slate-700) 50%, transparent);
      }
    }
  }
  .dark\:border-white\/10 {
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, #fff 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-white) 10%, transparent);
      }
    }
  }
  .dark\:bg-blue-600\/90 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(54.6% 0.245 262.881) 90%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-blue-600) 90%, transparent);
      }
    }
  }
  .dark\:bg-blue-700 {
    &:where(.dark, .dark *) {
      background-color: var(--color-blue-700);
    }
  }
  .dark\:bg-blue-900\/30 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(37.9% 0.146 265.522) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-blue-900) 30%, transparent);
      }
    }
  }
  .dark\:bg-neutral-700 {
    &:where(.dark, .dark *) {
      background-color: var(--color-neutral-700);
    }
  }
  .dark\:bg-neutral-800\/60 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(26.9% 0 0) 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-800) 60%, transparent);
      }
    }
  }
  .dark\:bg-neutral-800\/80 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(26.9% 0 0) 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-800) 80%, transparent);
      }
    }
  }
  .dark\:bg-neutral-800\/90 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(26.9% 0 0) 90%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-800) 90%, transparent);
      }
    }
  }
  .dark\:bg-neutral-900 {
    &:where(.dark, .dark *) {
      background-color: var(--color-neutral-900);
    }
  }
  .dark\:bg-neutral-900\/50 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(20.5% 0 0) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-900) 50%, transparent);
      }
    }
  }
  .dark\:bg-neutral-900\/70 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(20.5% 0 0) 70%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-900) 70%, transparent);
      }
    }
  }
  .dark\:bg-neutral-900\/95 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(20.5% 0 0) 95%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-900) 95%, transparent);
      }
    }
  }
  .dark\:bg-sky-400\/90 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(74.6% 0.16 232.661) 90%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-sky-400) 90%, transparent);
      }
    }
  }
  .dark\:bg-sky-800\/50 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(44.3% 0.11 240.79) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-sky-800) 50%, transparent);
      }
    }
  }
  .dark\:bg-sky-950\/30 {
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(29.3% 0.066 243.157) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-sky-950) 30%, transparent);
      }
    }
  }
  .dark\:from-neutral-900\/90 {
    &:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in srgb, oklch(20.5% 0 0) 90%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-from: color-mix(in oklab, var(--color-neutral-900) 90%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:from-neutral-900\/95 {
    &:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in srgb, oklch(20.5% 0 0) 95%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-from: color-mix(in oklab, var(--color-neutral-900) 95%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:from-sky-500 {
    &:where(.dark, .dark *) {
      --tw-gradient-from: var(--color-sky-500);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:from-sky-600\/95 {
    &:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in srgb, oklch(58.8% 0.158 241.966) 95%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-from: color-mix(in oklab, var(--color-sky-600) 95%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:from-sky-900\/30 {
    &:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in srgb, oklch(39.1% 0.09 240.876) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-from: color-mix(in oklab, var(--color-sky-900) 30%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:from-slate-800\/60 {
    &:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in srgb, oklch(27.9% 0.041 260.031) 60%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-from: color-mix(in oklab, var(--color-slate-800) 60%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:via-blue-900\/20 {
    &:where(.dark, .dark *) {
      --tw-gradient-via: color-mix(in srgb, oklch(37.9% 0.146 265.522) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-via: color-mix(in oklab, var(--color-blue-900) 20%, transparent);
      }
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  }
  .dark\:via-neutral-900\/50 {
    &:where(.dark, .dark *) {
      --tw-gradient-via: color-mix(in srgb, oklch(20.5% 0 0) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-via: color-mix(in oklab, var(--color-neutral-900) 50%, transparent);
      }
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  }
  .dark\:via-sky-600\/95 {
    &:where(.dark, .dark *) {
      --tw-gradient-via: color-mix(in srgb, oklch(58.8% 0.158 241.966) 95%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-via: color-mix(in oklab, var(--color-sky-600) 95%, transparent);
      }
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  }
  .dark\:via-sky-800 {
    &:where(.dark, .dark *) {
      --tw-gradient-via: var(--color-sky-800);
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  }
  .dark\:via-sky-900\/30 {
    &:where(.dark, .dark *) {
      --tw-gradient-via: color-mix(in srgb, oklch(39.1% 0.09 240.876) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-via: color-mix(in oklab, var(--color-sky-900) 30%, transparent);
      }
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
  }
  .dark\:to-blue-400 {
    &:where(.dark, .dark *) {
      --tw-gradient-to: var(--color-blue-400);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:to-blue-700\/95 {
    &:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in srgb, oklch(48.8% 0.243 264.376) 95%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-to: color-mix(in oklab, var(--color-blue-700) 95%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:to-blue-900\/20 {
    &:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in srgb, oklch(37.9% 0.146 265.522) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-to: color-mix(in oklab, var(--color-blue-900) 20%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:to-blue-900\/30 {
    &:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in srgb, oklch(37.9% 0.146 265.522) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-to: color-mix(in oklab, var(--color-blue-900) 30%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:to-neutral-800\/30 {
    &:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in srgb, oklch(26.9% 0 0) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-to: color-mix(in oklab, var(--color-neutral-800) 30%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:to-neutral-800\/90 {
    &:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in srgb, oklch(26.9% 0 0) 90%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-to: color-mix(in oklab, var(--color-neutral-800) 90%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:to-neutral-900\/10 {
    &:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in srgb, oklch(20.5% 0 0) 10%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-to: color-mix(in oklab, var(--color-neutral-900) 10%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .dark\:text-blue-300 {
    &:where(.dark, .dark *) {
      color: var(--color-blue-300);
    }
  }
  .dark\:text-blue-400 {
    &:where(.dark, .dark *) {
      color: var(--color-blue-400);
    }
  }
  .dark\:text-neutral-50 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-50);
    }
  }
  .dark\:text-neutral-100 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-100);
    }
  }
  .dark\:text-neutral-200 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-200);
    }
  }
  .dark\:text-neutral-300 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-300);
    }
  }
  .dark\:text-neutral-400 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-400);
    }
  }
  .dark\:text-neutral-500 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-500);
    }
  }
  .dark\:text-neutral-600 {
    &:where(.dark, .dark *) {
      color: var(--color-neutral-600);
    }
  }
  .dark\:text-sky-100 {
    &:where(.dark, .dark *) {
      color: var(--color-sky-100);
    }
  }
  .dark\:text-sky-300 {
    &:where(.dark, .dark *) {
      color: var(--color-sky-300);
    }
  }
  .dark\:text-sky-400 {
    &:where(.dark, .dark *) {
      color: var(--color-sky-400);
    }
  }
  .dark\:text-slate-50 {
    &:where(.dark, .dark *) {
      color: var(--color-slate-50);
    }
  }
  .dark\:text-slate-300 {
    &:where(.dark, .dark *) {
      color: var(--color-slate-300);
    }
  }
  .dark\:text-white {
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .dark\:placeholder-neutral-400 {
    &:where(.dark, .dark *) {
      &::placeholder {
        color: var(--color-neutral-400);
      }
    }
  }
  .dark\:shadow-blue-900\/30 {
    &:where(.dark, .dark *) {
      --tw-shadow-color: color-mix(in srgb, oklch(37.9% 0.146 265.522) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-blue-900) 30%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .dark\:shadow-neutral-900\/30 {
    &:where(.dark, .dark *) {
      --tw-shadow-color: color-mix(in srgb, oklch(20.5% 0 0) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-neutral-900) 30%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .dark\:shadow-sky-900\/20 {
    &:where(.dark, .dark *) {
      --tw-shadow-color: color-mix(in srgb, oklch(39.1% 0.09 240.876) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-sky-900) 20%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .dark\:shadow-slate-900\/20 {
    &:where(.dark, .dark *) {
      --tw-shadow-color: color-mix(in srgb, oklch(20.8% 0.042 265.755) 20%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-slate-900) 20%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .dark\:ring-blue-900\/50 {
    &:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in srgb, oklch(37.9% 0.146 265.522) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-blue-900) 50%, transparent);
      }
    }
  }
  .dark\:ring-neutral-700 {
    &:where(.dark, .dark *) {
      --tw-ring-color: var(--color-neutral-700);
    }
  }
  .dark\:ring-sky-800\/50 {
    &:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in srgb, oklch(44.3% 0.11 240.79) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-sky-800) 50%, transparent);
      }
    }
  }
  .dark\:prose-invert {
    &:where(.dark, .dark *) {
      --tw-prose-body: var(--tw-prose-invert-body);
      --tw-prose-headings: var(--tw-prose-invert-headings);
      --tw-prose-lead: var(--tw-prose-invert-lead);
      --tw-prose-links: var(--tw-prose-invert-links);
      --tw-prose-bold: var(--tw-prose-invert-bold);
      --tw-prose-counters: var(--tw-prose-invert-counters);
      --tw-prose-bullets: var(--tw-prose-invert-bullets);
      --tw-prose-hr: var(--tw-prose-invert-hr);
      --tw-prose-quotes: var(--tw-prose-invert-quotes);
      --tw-prose-quote-borders: var(--tw-prose-invert-quote-borders);
      --tw-prose-captions: var(--tw-prose-invert-captions);
      --tw-prose-kbd: var(--tw-prose-invert-kbd);
      --tw-prose-kbd-shadows: var(--tw-prose-invert-kbd-shadows);
      --tw-prose-code: var(--tw-prose-invert-code);
      --tw-prose-pre-code: var(--tw-prose-invert-pre-code);
      --tw-prose-pre-bg: var(--tw-prose-invert-pre-bg);
      --tw-prose-th-borders: var(--tw-prose-invert-th-borders);
      --tw-prose-td-borders: var(--tw-prose-invert-td-borders);
    }
  }
  .dark\:group-hover\:border-sky-700 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          border-color: var(--color-sky-700);
        }
      }
    }
  }
  .dark\:group-hover\:border-sky-800 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          border-color: var(--color-sky-800);
        }
      }
    }
  }
  .dark\:group-hover\:bg-sky-800\/60 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(44.3% 0.11 240.79) 60%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-sky-800) 60%, transparent);
          }
        }
      }
    }
  }
  .dark\:group-hover\:text-blue-400 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-blue-400);
        }
      }
    }
  }
  .dark\:group-hover\:text-sky-300 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-sky-300);
        }
      }
    }
  }
  .dark\:group-hover\:text-sky-400 {
    &:where(.dark, .dark *) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          color: var(--color-sky-400);
        }
      }
    }
  }
  .dark\:hover\:border-blue-800 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: var(--color-blue-800);
        }
      }
    }
  }
  .dark\:hover\:border-sky-500\/30 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: color-mix(in srgb, oklch(68.5% 0.169 237.323) 30%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-sky-500) 30%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:border-sky-700\/50 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          border-color: color-mix(in srgb, oklch(50% 0.134 242.749) 50%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            border-color: color-mix(in oklab, var(--color-sky-700) 50%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-blue-600 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-blue-600);
        }
      }
    }
  }
  .dark\:hover\:bg-blue-800\/40 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(42.4% 0.199 265.638) 40%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-blue-800) 40%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-blue-900\/30 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(37.9% 0.146 265.522) 30%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-blue-900) 30%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-cyan-900\/30 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(39.8% 0.07 227.392) 30%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-cyan-900) 30%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-gray-900 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-gray-900);
        }
      }
    }
  }
  .dark\:hover\:bg-neutral-800 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: var(--color-neutral-800);
        }
      }
    }
  }
  .dark\:hover\:bg-neutral-800\/80 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(26.9% 0 0) 80%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-neutral-800) 80%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-sky-900\/20 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(39.1% 0.09 240.876) 20%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-sky-900) 20%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:bg-gradient-to-r {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-gradient-position: to right in oklab;
          background-image: linear-gradient(var(--tw-gradient-stops));
        }
      }
    }
  }
  .dark\:hover\:from-neutral-900 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-gradient-from: var(--color-neutral-900);
          --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }
      }
    }
  }
  .dark\:hover\:from-sky-500\/95 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-gradient-from: color-mix(in srgb, oklch(68.5% 0.169 237.323) 95%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-from: color-mix(in oklab, var(--color-sky-500) 95%, transparent);
          }
          --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }
      }
    }
  }
  .dark\:hover\:from-sky-800\/40 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-gradient-from: color-mix(in srgb, oklch(44.3% 0.11 240.79) 40%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-from: color-mix(in oklab, var(--color-sky-800) 40%, transparent);
          }
          --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }
      }
    }
  }
  .dark\:hover\:via-sky-500\/95 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-gradient-via: color-mix(in srgb, oklch(68.5% 0.169 237.323) 95%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-via: color-mix(in oklab, var(--color-sky-500) 95%, transparent);
          }
          --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
          --tw-gradient-stops: var(--tw-gradient-via-stops);
        }
      }
    }
  }
  .dark\:hover\:via-sky-800\/40 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-gradient-via: color-mix(in srgb, oklch(44.3% 0.11 240.79) 40%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-via: color-mix(in oklab, var(--color-sky-800) 40%, transparent);
          }
          --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
          --tw-gradient-stops: var(--tw-gradient-via-stops);
        }
      }
    }
  }
  .dark\:hover\:to-blue-600\/95 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-gradient-to: color-mix(in srgb, oklch(54.6% 0.245 262.881) 95%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-to: color-mix(in oklab, var(--color-blue-600) 95%, transparent);
          }
          --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }
      }
    }
  }
  .dark\:hover\:to-blue-800\/40 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-gradient-to: color-mix(in srgb, oklch(42.4% 0.199 265.638) 40%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-to: color-mix(in oklab, var(--color-blue-800) 40%, transparent);
          }
          --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }
      }
    }
  }
  .dark\:hover\:to-neutral-800\/95 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-gradient-to: color-mix(in srgb, oklch(26.9% 0 0) 95%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            --tw-gradient-to: color-mix(in oklab, var(--color-neutral-800) 95%, transparent);
          }
          --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
        }
      }
    }
  }
  .dark\:hover\:text-blue-200 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-blue-200);
        }
      }
    }
  }
  .dark\:hover\:text-blue-300 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-blue-300);
        }
      }
    }
  }
  .dark\:hover\:text-cyan-300 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-cyan-300);
        }
      }
    }
  }
  .dark\:hover\:text-cyan-400 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-cyan-400);
        }
      }
    }
  }
  .dark\:hover\:text-sky-300 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-sky-300);
        }
      }
    }
  }
  .dark\:hover\:text-sky-400 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-sky-400);
        }
      }
    }
  }
  .dark\:hover\:shadow-sky-900\/30 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-shadow-color: color-mix(in srgb, oklch(39.1% 0.09 240.876) 30%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-sky-900) 30%, transparent) var(--tw-shadow-alpha), transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:ring-blue-700\/50 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-ring-color: color-mix(in srgb, oklch(48.8% 0.243 264.376) 50%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            --tw-ring-color: color-mix(in oklab, var(--color-blue-700) 50%, transparent);
          }
        }
      }
    }
  }
  .dark\:hover\:ring-sky-800 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-ring-color: var(--color-sky-800);
        }
      }
    }
  }
  .dark\:hover\:before\:from-sky-900\/30 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          &::before {
            content: var(--tw-content);
            --tw-gradient-from: color-mix(in srgb, oklch(39.1% 0.09 240.876) 30%, transparent);
            @supports (color: color-mix(in lab, red, red)) {
              --tw-gradient-from: color-mix(in oklab, var(--color-sky-900) 30%, transparent);
            }
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
          }
        }
      }
    }
  }
  .dark\:hover\:before\:to-sky-800\/30 {
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          &::before {
            content: var(--tw-content);
            --tw-gradient-to: color-mix(in srgb, oklch(44.3% 0.11 240.79) 30%, transparent);
            @supports (color: color-mix(in lab, red, red)) {
              --tw-gradient-to: color-mix(in oklab, var(--color-sky-800) 30%, transparent);
            }
            --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
          }
        }
      }
    }
  }
  .dark\:focus\:border-sky-500 {
    &:where(.dark, .dark *) {
      &:focus {
        border-color: var(--color-sky-500);
      }
    }
  }
  .dark\:focus\:ring-blue-800 {
    &:where(.dark, .dark *) {
      &:focus {
        --tw-ring-color: var(--color-blue-800);
      }
    }
  }
  .dark\:focus\:ring-sky-500\/50 {
    &:where(.dark, .dark *) {
      &:focus {
        --tw-ring-color: color-mix(in srgb, oklch(68.5% 0.169 237.323) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          --tw-ring-color: color-mix(in oklab, var(--color-sky-500) 50%, transparent);
        }
      }
    }
  }
  .dark\:focus-visible\:ring-blue-400 {
    &:where(.dark, .dark *) {
      &:focus-visible {
        --tw-ring-color: var(--color-blue-400);
      }
    }
  }
  .dark\:focus-visible\:ring-cyan-500 {
    &:where(.dark, .dark *) {
      &:focus-visible {
        --tw-ring-color: var(--color-cyan-500);
      }
    }
  }
  .dark\:active\:bg-neutral-700 {
    &:where(.dark, .dark *) {
      &:active {
        background-color: var(--color-neutral-700);
      }
    }
  }
  .dark\:active\:bg-sky-900\/30 {
    &:where(.dark, .dark *) {
      &:active {
        background-color: color-mix(in srgb, oklch(39.1% 0.09 240.876) 30%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-sky-900) 30%, transparent);
        }
      }
    }
  }
  .\[\&\>\*\:first-child\]\:mt-0 {
    &>*:first-child {
      margin-top: calc(var(--spacing) * 0);
    }
  }
}
@layer base {
  :root {
    --font-family-base: 'Segoe UI', 'Segoe UI Web (West European)',
      -apple-system, BlinkMacSystemFont, Roboto, 'Helvetica Neue', sans-serif;
    --font-family-mono: Consolas, 'Courier New', Courier, monospace;
    --text-xs: 10px;
    --text-sm: 12px;
    --text-base: 14px;
    --text-lg: 16px;
    --text-xl: 20px;
    --text-2xl: 24px;
    --text-3xl: 28px;
    --text-4xl: 32px;
    --text-5xl: 40px;
    --text-6xl: 68px;
    --text-xs--line-height: 14px;
    --text-sm--line-height: 16px;
    --text-base--line-height: 20px;
    --text-lg--line-height: 22px;
    --text-xl--line-height: 28px;
    --text-2xl--line-height: 32px;
    --text-3xl--line-height: 36px;
    --text-4xl--line-height: 40px;
    --text-5xl--line-height: 52px;
    --text-6xl--line-height: 92px;
    --font-weight-normal: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-xs: 2px;
    --radius-sm: 4px;
    --radius-md: 6px;
    --radius-lg: 8px;
    --radius-xl: 10px;
    --spacing: 4px;
    --shadow-2xs: 0 0 2px rgba(0, 0, 0, 0.24), 0 1px 2px rgba(0, 0, 0, 0.28);
    --shadow-xs: 0 0 2px rgba(0, 0, 0, 0.24), 0 2px 4px rgba(0, 0, 0, 0.28);
    --shadow-sm: 0 0 2px rgba(0, 0, 0, 0.24), 0 4px 8px rgba(0, 0, 0, 0.28);
    --shadow-md: 0 0 2px rgba(0, 0, 0, 0.24), 0 8px 16px rgba(0, 0, 0, 0.28);
    --shadow-lg: 0 0 8px rgba(0, 0, 0, 0.24), 0 14px 28px rgba(0, 0, 0, 0.28);
    --shadow-xl: 0 0 8px rgba(0, 0, 0, 0.24), 0 32px 64px rgba(0, 0, 0, 0.28);
    --shadow-2xl: 0 0 2px rgba(0, 0, 0, 0.3), 0 1px 2px rgba(0, 0, 0, 0.25);
    --ease-in: cubic-bezier(1, 0, 1, 1);
    --ease-out: cubic-bezier(0, 0, 0, 1);
    --ease-in-out: cubic-bezier(0.33, 0, 0.67, 1);
    --breakpoint-sm: 40rem;
    --breakpoint-md: 48rem;
    --breakpoint-lg: 64rem;
    --breakpoint-xl: 80rem;
    --breakpoint-2xl: 96rem;
    --container-3xs: 16rem;
    --container-2xs: 18rem;
    --container-xs: 20rem;
    --container-sm: 24rem;
    --container-md: 28rem;
    --container-lg: 32rem;
    --container-xl: 36rem;
    --container-2xl: 42rem;
    --container-3xl: 48rem;
    --container-4xl: 56rem;
    --container-5xl: 64rem;
    --container-6xl: 72rem;
    --container-7xl: 80rem;
    --container-prose: 65ch;
    --color-gray-50: #faf9f8;
    --color-gray-100: #f3f2f1;
    --color-gray-200: #edebe9;
    --color-gray-300: #e1dfdd;
    --color-gray-400: #c8c6c4;
    --color-gray-500: #a19f9d;
    --color-gray-600: #605e5c;
    --color-gray-700: #323130;
    --color-gray-800: #201f1e;
    --color-gray-900: #11100f;
    --color-gray-950: #000000;
    --color-blue-25: #f5f9fd;
    --color-blue-50: #e9f1fb;
    --color-blue-100: #cee0f5;
    --color-blue-200: #9dc3eb;
    --color-blue-300: #62a0e1;
    --color-blue-400: #3484d7;
    --color-blue-500: #0f6cbd;
    --color-blue-600: #0c5aa0;
    --color-blue-700: #094884;
    --color-blue-800: #063768;
    --color-blue-900: #032546;
    --color-blue-950: #001325;
    --color-green-50: #e9f6e9;
    --color-green-100: #dff6df;
    --color-green-200: #9fd89f;
    --color-green-300: #54b054;
    --color-green-400: #13a10e;
    --color-green-500: #107c10;
    --color-green-600: #054b05;
    --color-green-700: #023502;
    --color-green-800: #052505;
    --color-green-900: #031a03;
    --color-green-950: #021402;
    --color-yellow-50: #fff9e6;
    --color-yellow-100: #fff4cc;
    --color-yellow-200: #fde300;
    --color-yellow-300: #d9bc00;
    --color-yellow-400: #8a7700;
    --color-yellow-500: #817400;
    --color-yellow-600: #4c4400;
    --color-yellow-700: #463100;
    --color-yellow-800: #3a2800;
    --color-yellow-900: #2e1f00;
    --color-yellow-950: #231700;
    --color-red-50: #fde6e6;
    --color-red-100: #fcd9d9;
    --color-red-200: #f1bbbc;
    --color-red-300: #e37d80;
    --color-red-400: #d13438;
    --color-red-500: #c50f1f;
    --color-red-600: #a30a18;
    --color-red-700: #750712;
    --color-red-800: #5c050e;
    --color-red-900: #430309;
    --color-red-950: #2a0206;
    --color-brand-50: #e9f1fb;
    --color-brand-100: #cee0f5;
    --color-brand-200: #9dc3eb;
    --color-brand-300: #62a0e1;
    --color-brand-400: #3484d7;
    --color-brand-500: #0f6cbd;
    --color-brand-600: #0c5aa0;
    --color-brand-700: #094884;
    --color-brand-800: #063768;
    --color-brand-900: #032546;
    --color-brand-950: #001325;
    --color-neutral-50: #ffffff;
    --color-neutral-100: #faf9f8;
    --color-neutral-200: #f3f2f1;
    --color-neutral-300: #edebe9;
    --color-neutral-400: #e1dfdd;
    --color-neutral-500: #c8c6c4;
    --color-neutral-600: #a19f9d;
    --color-neutral-700: #605e5c;
    --color-neutral-800: #323130;
    --color-neutral-900: #201f1e;
    --color-neutral-950: #000000;
  }
  .dark {
    --color-gray-50: #f5f5f5;
    --color-gray-100: #e6e6e6;
    --color-gray-200: #d6d6d6;
    --color-gray-300: #adadad;
    --color-gray-400: #757575;
    --color-gray-500: #666666;
    --color-gray-600: #3d3d3d;
    --color-gray-700: #333333;
    --color-gray-800: #1f1f1f;
    --color-gray-900: #292929;
    --color-gray-950: #141414;
    --color-blue-50: #ebf3fc;
    --color-blue-100: #cfe4fa;
    --color-blue-200: #96c6fa;
    --color-blue-300: #62abf5;
    --color-blue-400: #479ef5;
    --color-blue-500: #2886de;
    --color-blue-600: #0f6cbd;
    --color-blue-700: #115ea3;
    --color-blue-800: #0f548c;
    --color-blue-900: #0c3b5e;
    --color-blue-950: #082338;
    --color-green-50: #052505;
    --color-green-100: #094509;
    --color-green-200: #107c10;
    --color-green-300: #13a10e;
    --color-green-400: #3db838;
    --color-green-500: #54b054;
    --color-green-600: #9fd89f;
    --color-green-700: #a7e3a5;
    --color-green-800: #bdd99b;
    --color-green-900: #9ad29a;
    --color-green-950: #9fd89f;
    --color-orange-50: #411200;
    --color-orange-100: #4a1e04;
    --color-orange-200: #712d09;
    --color-orange-300: #8a3707;
    --color-orange-400: #f7630c;
    --color-orange-500: #f98845;
    --color-orange-600: #faa06b;
    --color-orange-700: #df8e64;
    --color-orange-800: #efc4ad;
    --color-orange-900: #fdcfb4;
    --color-orange-950: #ffddb3;
    --color-red-50: #3b0509;
    --color-red-100: #3f1011;
    --color-red-200: #590815;
    --color-red-300: #6e0811;
    --color-red-400: #c50f1f;
    --color-red-500: #dc626d;
    --color-red-600: #e37d80;
    --color-red-700: #d69ca5;
    --color-red-800: #eeacb2;
    --color-red-900: #f1bbbc;
    --color-red-950: #f4bfab;
    --color-text-primary: #ffffff;
    --color-text-secondary: #d6d6d6;
    --color-text-tertiary: #adadad;
    --color-text-disabled: #5c5c5c;
    --color-background-primary: #292929;
    --color-background-secondary: #1f1f1f;
    --color-background-tertiary: #141414;
    --color-border-primary: #666666;
    --color-border-secondary: #525252;
    --color-border-tertiary: #3d3d3d;
    --color-indigo-50: #001665;
    --color-indigo-100: #002c4e;
    --color-indigo-200: #004377;
    --color-indigo-300: #115ea3;
    --color-indigo-400: #0f6cbd;
    --color-indigo-500: #2886de;
    --color-indigo-600: #479ef5;
    --color-indigo-700: #62abf5;
    --color-indigo-800: #96c6fa;
    --color-indigo-900: #cfe4fa;
    --color-indigo-950: #ebf3fc;
    --color-neutral-50: #ffffff;
    --color-neutral-100: #f5f5f5;
    --color-neutral-200: #e6e6e6;
    --color-neutral-300: #d6d6d6;
    --color-neutral-400: #adadad;
    --color-neutral-500: #757575;
    --color-neutral-600: #666666;
    --color-neutral-700: #3d3d3d;
    --color-neutral-800: #333333;
    --color-neutral-900: #1f1f1f;
    --color-neutral-950: #000000;
  }
}
@layer components;
@layer utilities {
  .prose {
    max-width: none;
    & :is(:where(h1, h2, h3, h4, h5, h6, th):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      position: relative;
    }
    & :is(:where(h1, h2, h3, h4, h5, h6, th):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      --tw-leading: var(--leading-tight);
      line-height: var(--leading-tight);
    }
    & :is(:where(h1, h2, h3, h4, h5, h6, th):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
    }
    & :is(:where(h1, h2, h3, h4, h5, h6, th):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      color: var(--color-neutral-900);
    }
    & :is(:where(h1, h2, h3, h4, h5, h6, th):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      &:where(.dark, .dark *) {
        color: var(--color-neutral-100);
      }
    }
    & :is(:where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      margin-top: calc(var(--spacing) * 8);
    }
    & :is(:where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      margin-bottom: calc(var(--spacing) * 4);
    }
    & :is(:where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-size: var(--text-2xl);
      line-height: var(--tw-leading, var(--text-2xl--line-height));
    }
    & :is(:where(h2):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      --tw-font-weight: var(--font-weight-bold);
      font-weight: var(--font-weight-bold);
    }
    & :is(:where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      margin-top: calc(var(--spacing) * 6);
    }
    & :is(:where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      margin-bottom: calc(var(--spacing) * 3);
    }
    & :is(:where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
    & :is(:where(h3):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
    }
    & :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      text-align: justify;
    }
    & :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      --tw-leading: var(--leading-relaxed);
      line-height: var(--leading-relaxed);
    }
    & :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      color: var(--color-neutral-800);
    }
    &:where(.dark, .dark *) {
      & :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
        color: var(--color-neutral-200);
      }
    }
    & :is(:where(p):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      &:where(.dark, .dark *) {
        color: var(--color-neutral-200);
      }
    }
    & :is(:where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      color: var(--color-neutral-800);
    }
    & :is(:where(ol):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      &:where(.dark, .dark *) {
        color: var(--color-neutral-200);
      }
    }
    & :is(:where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      color: var(--color-neutral-800);
    }
    & :is(:where(ul):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      &:where(.dark, .dark *) {
        color: var(--color-neutral-200);
      }
    }
    & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      --tw-font-weight: var(--font-weight-medium);
      font-weight: var(--font-weight-medium);
    }
    & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      color: var(--color-blue-600);
    }
    & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      text-decoration-line: none;
    }
    & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      transition-property: all;
      transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
      transition-duration: var(--tw-duration, var(--default-transition-duration));
    }
    & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      --tw-duration: 200ms;
      transition-duration: 200ms;
    }
    &:hover {
      @media (hover: hover) {
        & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
          color: var(--color-blue-700);
        }
      }
    }
    &:where(.dark, .dark *) {
      & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
        color: var(--color-blue-400);
      }
    }
    & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      &:where(.dark, .dark *) {
        color: var(--color-blue-400);
      }
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
            color: var(--color-blue-300);
          }
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        & :is(:where(a):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
          &:where(.dark, .dark *) {
            color: var(--color-blue-300);
          }
        }
      }
    }
    & :is(:where(table):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      border-color: var(--color-neutral-200);
    }
    & :is(:where(table):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      &:where(.dark, .dark *) {
        border-color: var(--color-neutral-800);
      }
    }
    & :is(:where(th):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
    }
    & :is(:where(th):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      color: var(--color-neutral-900);
    }
    & :is(:where(th):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      &:where(.dark, .dark *) {
        color: var(--color-neutral-100);
      }
    }
    & :is(:where(td):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      color: var(--color-neutral-800);
    }
    & :is(:where(td):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      &:where(.dark, .dark *) {
        color: var(--color-neutral-200);
      }
    }
    & :is(:where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      border-color: var(--color-neutral-200);
    }
    & :is(:where(hr):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      &:where(.dark, .dark *) {
        border-color: var(--color-neutral-700);
      }
    }
    & :is(:where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      --tw-font-weight: var(--font-weight-semibold);
      font-weight: var(--font-weight-semibold);
    }
    & :is(:where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      color: var(--color-neutral-900);
    }
    & :is(:where(strong):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      &:where(.dark, .dark *) {
        color: var(--color-neutral-100);
      }
    }
    & :is(:where(em):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      color: var(--color-neutral-800);
    }
    & :is(:where(em):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      &:where(.dark, .dark *) {
        color: var(--color-neutral-200);
      }
    }
    & :is(:where(img):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      border-radius: var(--radius-md);
    }
    & :is(:where(img):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 2px 4px -2px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
    & :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      & *::marker {
        color: var(--color-neutral-500);
      }
      &::marker {
        color: var(--color-neutral-500);
      }
      & *::-webkit-details-marker {
        color: var(--color-neutral-500);
      }
      &::-webkit-details-marker {
        color: var(--color-neutral-500);
      }
    }
    & :is(:where(li):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      & *::marker {
        &:where(.dark, .dark *) {
          color: var(--color-neutral-500);
        }
      }
      &::marker {
        &:where(.dark, .dark *) {
          color: var(--color-neutral-500);
        }
      }
      & *::-webkit-details-marker {
        &:where(.dark, .dark *) {
          color: var(--color-neutral-500);
        }
      }
      &::-webkit-details-marker {
        &:where(.dark, .dark *) {
          color: var(--color-neutral-500);
        }
      }
    }
    & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      max-height: 500px;
    }
    & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      overflow: auto;
    }
    & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
    & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      border-color: var(--color-neutral-200);
    }
    & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      background-color: var(--color-neutral-50);
    }
    & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      padding-inline: calc(var(--spacing) * 2);
    }
    & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      padding-block: calc(var(--spacing) * 2);
    }
    & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      &:is(:where(.group):hover *) {
        @media (hover: hover) {
          overflow: scroll;
        }
      }
    }
    & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      &:where(.dark, .dark *) {
        border-color: var(--color-neutral-800);
      }
    }
    & :is(:where(pre):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      &:where(.dark, .dark *) {
        background-color: var(--color-neutral-900);
      }
    }
    & :is(:where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      border-radius: var(--radius-md);
    }
    & :is(:where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      background-color: color-mix(in srgb, oklch(92.2% 0 0) 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-200) 80%, transparent);
      }
    }
    & :is(:where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      padding-inline: calc(var(--spacing) * 1.5);
    }
    & :is(:where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      padding-block: calc(var(--spacing) * 0.5);
    }
    & :is(:where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      --tw-font-weight: var(--font-weight-normal);
      font-weight: var(--font-weight-normal);
    }
    & :is(:where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      color: var(--color-sky-600);
    }
    & :is(:where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      &::before {
        content: var(--tw-content);
        --tw-content: none;
        content: none;
      }
    }
    & :is(:where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      &::after {
        content: var(--tw-content);
        --tw-content: none;
        content: none;
      }
    }
    &:where(.dark, .dark *) {
      & :is(:where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
        background-color: color-mix(in srgb, oklch(26.9% 0 0) 60%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-neutral-800) 60%, transparent);
        }
      }
    }
    & :is(:where(code):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      &:where(.dark, .dark *) {
        color: var(--color-sky-500);
      }
    }
    & :is(:where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      border-top-right-radius: var(--radius-lg);
      border-bottom-right-radius: var(--radius-lg);
    }
    & :is(:where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      border-left-style: var(--tw-border-style);
      border-left-width: 4px;
    }
    & :is(:where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      border-color: var(--color-blue-500);
    }
    & :is(:where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      background-color: color-mix(in srgb, oklch(97% 0.014 254.604) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-blue-50) 50%, transparent);
      }
    }
    & :is(:where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      padding-block: calc(var(--spacing) * 1);
    }
    & :is(:where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
      --tw-font-weight: var(--font-weight-normal);
      font-weight: var(--font-weight-normal);
    }
    &:where(.dark, .dark *) {
      & :is(:where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
        border-color: var(--color-blue-600);
      }
    }
    &:where(.dark, .dark *) {
      & :is(:where(blockquote):not(:where([class~="not-prose"],[class~="not-prose"] *))) {
        background-color: color-mix(in srgb, oklch(37.9% 0.146 265.522) 20%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-blue-900) 20%, transparent);
        }
      }
    }
  }
}
body {
  background-color: rgb(var(--color-neutral-base));
  --tw-font-weight: var(--font-family-base);
  font-weight: var(--font-family-base);
  color: rgb(var(--color-neutral));
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}
:root {
  --pagefind-ui-primary: var(--color-brand-500) !important;
  --pagefind-ui-text: var(--color-neutral-900) !important;
  --pagefind-ui-background: var(--color-neutral-50) !important;
  --pagefind-ui-border: var(--color-neutral-200) !important;
  --pagefind-ui-tag: var(--color-neutral-200) !important;
  --pagefind-ui-font: var(--font-family-base) !important;
  --pagefind-ui-border-width: var(--spacing) !important;
  --pagefind-ui-image-border-radius: var(--radius-md) !important;
}
.dark {
  --pagefind-ui-primary: var(--color-brand-500) !important;
  --pagefind-ui-text: var(--color-neutral-50) !important;
  --pagefind-ui-background: var(--color-neutral-900) !important;
  --pagefind-ui-border: var(--color-neutral-800) !important;
  --pagefind-ui-tag: var(--color-neutral-800) !important;
}
@layer fluidity {
  #fluidity-theme-container {
    background-color: var(--color-blue-25);
    display: flex;
    min-height: 100vh;
    flex-direction: column;
    &:where(.dark, .dark *) {
      background-color: var(--color-neutral-950);
    }
  }
  .fluidity-decorative-gradient-line {
    position: absolute;
    right: calc(var(--spacing) * 0);
    bottom: calc(var(--spacing) * 0);
    left: calc(var(--spacing) * 0);
    height: calc(var(--spacing) * 0.5);
    --tw-gradient-position: to right in oklab;
    background-image: linear-gradient(var(--tw-gradient-stops));
    --tw-gradient-from: color-mix(in srgb, oklch(74.6% 0.16 232.661) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-from: color-mix(in oklab, var(--color-sky-400) 40%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    --tw-gradient-via: color-mix(in srgb, oklch(62.3% 0.214 259.815) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-via: color-mix(in oklab, var(--color-blue-500) 40%, transparent);
    }
    --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
    --tw-gradient-stops: var(--tw-gradient-via-stops);
    --tw-gradient-to: color-mix(in srgb, oklch(74.6% 0.16 232.661) 40%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-gradient-to: color-mix(in oklab, var(--color-sky-400) 40%, transparent);
    }
    --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    &:where(.dark, .dark *) {
      --tw-gradient-from: color-mix(in srgb, oklch(68.5% 0.169 237.323) 40%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-from: color-mix(in oklab, var(--color-sky-500) 40%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
    &:where(.dark, .dark *) {
      --tw-gradient-via: color-mix(in srgb, oklch(70.7% 0.165 254.624) 40%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-via: color-mix(in oklab, var(--color-blue-400) 40%, transparent);
      }
      --tw-gradient-via-stops: var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-via) var(--tw-gradient-via-position), var(--tw-gradient-to) var(--tw-gradient-to-position);
      --tw-gradient-stops: var(--tw-gradient-via-stops);
    }
    &:where(.dark, .dark *) {
      --tw-gradient-to: color-mix(in srgb, oklch(68.5% 0.169 237.323) 40%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-gradient-to: color-mix(in oklab, var(--color-sky-500) 40%, transparent);
      }
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .fluidity-page-title {
    position: relative;
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
    color: var(--color-neutral-900);
    &:where(.dark, .dark *) {
      color: var(--color-white);
    }
  }
  .fluidity-page-title-line {
    position: absolute;
    right: calc(var(--spacing) * 0);
    bottom: calc(var(--spacing) * -1);
    left: calc(var(--spacing) * 0);
    height: calc(var(--spacing) * 0.5);
    transform-origin: left;
    --tw-scale-x: 0%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
    background-color: var(--color-blue-500);
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    --tw-ease: var(--ease-out);
    transition-timing-function: var(--ease-out);
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        --tw-scale-x: 100%;
        scale: var(--tw-scale-x) var(--tw-scale-y);
      }
    }
    &:where(.dark, .dark *) {
      --tw-gradient-to: var(--color-blue-400);
      --tw-gradient-stops: var(--tw-gradient-via-stops, var(--tw-gradient-position), var(--tw-gradient-from) var(--tw-gradient-from-position), var(--tw-gradient-to) var(--tw-gradient-to-position));
    }
  }
  .fluidity-page-title-icon {
    display: inline-block;
    color: var(--color-cyan-600);
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        rotate: 12deg;
      }
    }
    &:where(.dark, .dark *) {
      color: var(--color-cyan-400);
    }
  }
  .fluidity-page-desc {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
    color: var(--color-neutral-600);
    &:where(.dark, .dark *) {
      color: var(--color-neutral-400);
    }
  }
  .fluidity-tag {
    border-radius: var(--radius-md);
    background-color: color-mix(in srgb, oklch(97% 0.014 254.604) 90%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-blue-50) 90%, transparent);
    }
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 0.5);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-blue-600);
    --tw-ring-shadow: var(--tw-ring-inset,) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-ring-color: var(--color-blue-100);
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 200ms;
    transition-duration: 200ms;
    &:hover {
      @media (hover: hover) {
        background-color: color-mix(in srgb, oklch(97.7% 0.013 236.62) 90%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          background-color: color-mix(in oklab, var(--color-sky-50) 90%, transparent);
        }
      }
    }
    &:hover {
      @media (hover: hover) {
        color: var(--color-sky-600);
      }
    }
    &:hover {
      @media (hover: hover) {
        --tw-ring-color: var(--color-sky-200);
      }
    }
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(37.9% 0.146 265.522) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-blue-900) 30%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      color: var(--color-blue-300);
    }
    &:where(.dark, .dark *) {
      --tw-ring-color: color-mix(in srgb, oklch(37.9% 0.146 265.522) 50%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-ring-color: color-mix(in oklab, var(--color-blue-900) 50%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(39.1% 0.09 240.876) 30%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-sky-900) 30%, transparent);
          }
        }
      }
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          color: var(--color-sky-300);
        }
      }
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          --tw-ring-color: var(--color-sky-800);
        }
      }
    }
  }
  .fluidity-category {
    display: inline-flex;
    transform: var(--tw-rotate-x,) var(--tw-rotate-y,) var(--tw-rotate-z,) var(--tw-skew-x,) var(--tw-skew-y,);
    padding-inline: calc(var(--spacing) * 1);
    padding-block: calc(var(--spacing) * 1.5);
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
    color: var(--color-sky-700);
    text-decoration-line: underline;
    text-decoration-color: var(--color-sky-700);
    text-underline-offset: 4px;
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 300ms;
    transition-duration: 300ms;
    &:is(:where(.group):hover *) {
      @media (hover: hover) {
        text-decoration-style: double;
      }
    }
    &:where(.dark, .dark *) {
      color: var(--color-sky-300);
    }
  }
  .fluidity-header-icon {
    cursor: pointer;
    border-radius: var(--radius-lg);
    padding: calc(var(--spacing) * 2);
    color: var(--color-sky-700);
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
    --tw-duration: 200ms;
    transition-duration: 200ms;
    &:hover {
      @media (hover: hover) {
        background-color: var(--color-sky-50);
      }
    }
    &:where(.dark, .dark *) {
      color: var(--color-sky-400);
    }
    &:where(.dark, .dark *) {
      &:hover {
        @media (hover: hover) {
          background-color: color-mix(in srgb, oklch(39.1% 0.09 240.876) 40%, transparent);
          @supports (color: color-mix(in lab, red, red)) {
            background-color: color-mix(in oklab, var(--color-sky-900) 40%, transparent);
          }
        }
      }
    }
  }
  .fluidity-container-1 {
    width: 100%;
    @media (width >= 40rem) {
      max-width: 40rem;
    }
    @media (width >= 48rem) {
      max-width: 48rem;
    }
    @media (width >= 64rem) {
      max-width: 64rem;
    }
    @media (width >= 80rem) {
      max-width: 80rem;
    }
    @media (width >= 96rem) {
      max-width: 96rem;
    }
    margin-inline: auto;
    :where(& > :not(:last-child)) {
      --tw-space-y-reverse: 0;
      margin-block-start: calc(calc(var(--spacing) * 4) * var(--tw-space-y-reverse));
      margin-block-end: calc(calc(var(--spacing) * 4) * calc(1 - var(--tw-space-y-reverse)));
    }
    padding-inline: calc(var(--spacing) * 2);
    padding-block: calc(var(--spacing) * 4);
    @media (width >= 64rem) {
      :where(& > :not(:last-child)) {
        --tw-space-y-reverse: 0;
        margin-block-start: calc(calc(var(--spacing) * 8) * var(--tw-space-y-reverse));
        margin-block-end: calc(calc(var(--spacing) * 8) * calc(1 - var(--tw-space-y-reverse)));
      }
    }
    @media (width >= 64rem) {
      padding-inline: calc(var(--spacing) * 4);
    }
    @media (width >= 64rem) {
      padding-block: calc(var(--spacing) * 8);
    }
  }
  .fluidity-box-1 {
    :where(& > :not(:last-child)) {
      --tw-divide-y-reverse: 0;
      border-bottom-style: var(--tw-border-style);
      border-top-style: var(--tw-border-style);
      border-top-width: calc(1px * var(--tw-divide-y-reverse));
      border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
    }
    :where(& > :not(:last-child)) {
      border-color: var(--color-blue-100);
    }
    border-radius: var(--radius-xl);
    border-style: var(--tw-border-style);
    border-width: 1px;
    border-color: color-mix(in srgb, oklch(70.8% 0 0) 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      border-color: color-mix(in oklab, var(--color-neutral-400) 80%, transparent);
    }
    background-color: color-mix(in srgb, #fff 80%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      background-color: color-mix(in oklab, var(--color-white) 80%, transparent);
    }
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, rgb(0 0 0 / 0.1)), 0 1px 2px -1px var(--tw-shadow-color, rgb(0 0 0 / 0.1));
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    --tw-shadow-color: color-mix(in srgb, oklch(93.2% 0.032 255.585) 50%, transparent);
    @supports (color: color-mix(in lab, red, red)) {
      --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-blue-100) 50%, transparent) var(--tw-shadow-alpha), transparent);
    }
    --tw-backdrop-blur: blur(var(--blur-sm));
    -webkit-backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    backdrop-filter: var(--tw-backdrop-blur,) var(--tw-backdrop-brightness,) var(--tw-backdrop-contrast,) var(--tw-backdrop-grayscale,) var(--tw-backdrop-hue-rotate,) var(--tw-backdrop-invert,) var(--tw-backdrop-opacity,) var(--tw-backdrop-saturate,) var(--tw-backdrop-sepia,);
    &:where(.dark, .dark *) {
      :where(& > :not(:last-child)) {
        border-color: color-mix(in srgb, oklch(37.9% 0.146 265.522) 50%, transparent);
        @supports (color: color-mix(in lab, red, red)) {
          border-color: color-mix(in oklab, var(--color-blue-900) 50%, transparent);
        }
      }
    }
    &:where(.dark, .dark *) {
      border-color: color-mix(in srgb, oklch(26.9% 0 0) 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        border-color: color-mix(in oklab, var(--color-neutral-800) 80%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      background-color: color-mix(in srgb, oklch(20.5% 0 0) 80%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        background-color: color-mix(in oklab, var(--color-neutral-900) 80%, transparent);
      }
    }
    &:where(.dark, .dark *) {
      --tw-shadow-color: color-mix(in srgb, oklch(37.9% 0.146 265.522) 30%, transparent);
      @supports (color: color-mix(in lab, red, red)) {
        --tw-shadow-color: color-mix(in oklab, color-mix(in oklab, var(--color-blue-900) 30%, transparent) var(--tw-shadow-alpha), transparent);
      }
    }
  }
  .fluidity-tab-list .fluidity-tab-active {
    border-color: var(--color-blue-500);
    color: var(--color-neutral-900);
    &:where(.dark, .dark *) {
      color: var(--color-neutral-300);
    }
  }
  .fluidity-tab-list .fluidity-tab-inactive {
    border-color: transparent;
    color: var(--color-neutral-600);
    &:where(.dark, .dark *) {
      color: var(--color-neutral-400);
    }
  }
  #mobile-menu.fluidity-mobile-menu-open {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
    --tw-scale-x: 100%;
    --tw-scale-y: 100%;
    --tw-scale-z: 100%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
    opacity: 100%;
  }
  #mobile-menu.fluidity-mobile-menu-closed {
    --tw-translate-x: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
    --tw-scale-x: 95%;
    --tw-scale-y: 95%;
    --tw-scale-z: 95%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
    opacity: 0%;
  }
}
@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}
@property --tw-border-spacing-x {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}
@property --tw-border-spacing-y {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}
@property --tw-content {
  syntax: "*";
  inherits: false;
  initial-value: "";
}
@property --tw-font-weight {
  syntax: "*";
  inherits: false;
}
@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}
@property --tw-rotate-x {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-y {
  syntax: "*";
  inherits: false;
}
@property --tw-rotate-z {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-x {
  syntax: "*";
  inherits: false;
}
@property --tw-skew-y {
  syntax: "*";
  inherits: false;
}
@property --tw-space-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}
@property --tw-gradient-position {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-via {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-to {
  syntax: "<color>";
  inherits: false;
  initial-value: #0000;
}
@property --tw-gradient-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-via-stops {
  syntax: "*";
  inherits: false;
}
@property --tw-gradient-from-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 0%;
}
@property --tw-gradient-via-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 50%;
}
@property --tw-gradient-to-position {
  syntax: "<length-percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-leading {
  syntax: "*";
  inherits: false;
}
@property --tw-tracking {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false;
}
@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-ring-inset {
  syntax: "*";
  inherits: false;
}
@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0px;
}
@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}
@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}
@property --tw-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false;
}
@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}
@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false;
}
@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false;
}
@property --tw-duration {
  syntax: "*";
  inherits: false;
}
@property --tw-ease {
  syntax: "*";
  inherits: false;
}
@layer properties {
  @supports ((-webkit-hyphens: none) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color:rgb(from red r g b)))) {
    *, ::before, ::after, ::backdrop {
      --tw-border-style: solid;
      --tw-border-spacing-x: 0;
      --tw-border-spacing-y: 0;
      --tw-content: "";
      --tw-font-weight: initial;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-y-reverse: 0;
      --tw-space-x-reverse: 0;
      --tw-divide-y-reverse: 0;
      --tw-gradient-position: initial;
      --tw-gradient-from: #0000;
      --tw-gradient-via: #0000;
      --tw-gradient-to: #0000;
      --tw-gradient-stops: initial;
      --tw-gradient-via-stops: initial;
      --tw-gradient-from-position: 0%;
      --tw-gradient-via-position: 50%;
      --tw-gradient-to-position: 100%;
      --tw-leading: initial;
      --tw-tracking: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
    }
  }
}

